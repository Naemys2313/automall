
&НаКлиенте
Процедура am_am_НадписьАвтоНажатиеПосле(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы[ТекущаяСтраницаНоменклатуры].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	am_УстановитьОтборАвто(ТекущиеДанные);
	
КонецПроцедуры

&НаСервере
Процедура am_УстановитьОтборАвто(ТекущиеДанные)
	
	Если Элементы.am_ГруппаСписокАвтомобилей.Видимость Тогда
		Элементы.am_ГруппаСписокАвтомобилей.Видимость = Ложь;
	Иначе
		Элементы.am_ГруппаСписокАвтомобилей.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

//&НаСервере
//&После("ОбновитьДанныеПоНоменклатуреСервер")
//Процедура am_ОбновитьДанныеПоНоменклатуреСервер(Номенклатура, Характертистика, ЕдиницаИзмерения)
//	
//	
//КонецПроцедуры

&НаКлиенте
Процедура am_am_СписокАвтоПриИзмененииПосле(Элемент)
	
	ТекущиеДанные = Элементы[ТекущаяСтраницаНоменклатуры].ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Или Не ТекущиеДанные.Свойство("Ссылка") Тогда Возврат КонецЕсли;
	
	Номенклатура = Элементы[ТекущаяСтраницаНоменклатуры].ТекущиеДанные.Ссылка;
	
	am_ИзменитьСписокАвтоНаСервере(Номенклатура);
	
КонецПроцедуры

&НаСервере
Процедура am_ИзменитьСписокАвтоНаСервере(Номенклатура)
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура");
	
	Для Каждого Строка Из am_СписокАвто Цикл
		НоваяСтрока = ТЗ.Добавить();
		НоваяСтрока.Номенклатура = Строка.Значение;
	КонецЦикла;
	
	ТЗ.Свернуть("Номенклатура");
	
	НаборЗаписей = РегистрыСведений.am_ПодходящиеАвто.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);    
	
	Для Каждого Строка Из ТЗ Цикл
		
		Если Строка = Неопределено Тогда Продолжить КонецЕсли;
		
		Запись = НаборЗаписей.Добавить();
		Запись.Номенклатура = Номенклатура;
		Запись.Автомобиль = Строка.Номенклатура;
	
	КонецЦикла;
	
	НаборЗаписей.Записать(Истина);
	
	КоличествоПозиций = am_СписокАвто.Количество();
	
	Если КоличествоПозиций = 0 Тогда
		
		ТекстЗаголовка = НСтр("ru = 'Нет автомобилей'");
		
	Иначе
		
		ТекстНадписи = ПредметИсчисления(
		КоличествоПозиций,
		НСтр("ru = 'автомобиль'"),
		НСтр("ru = 'автомобиля'"),
		НСтр("ru = 'автомобилей'"),
		"м");
		
		ТекстЗаголовка = НСтр("ru = '%1%'");
		
		ТекстАвтомобили = Строка(КоличествоПозиций) + ТекстНадписи;
		
		ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%1%", ТекстАвтомобили); 
		
	КонецЕсли;
	
	am_НадписьАвто = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиенте
Процедура am_ПриОткрытииПосле(Отказ)
	
	am_ВидимостьОбъектов();
	
КонецПроцедуры

&НаСервере
Процедура am_ВидимостьОбъектов()
	
	Результат = РегистрыСведений.am_ХранилищеНастроек.ПолучитьРазрешениеОтбораДеталейПоАвтомобилю();
	Элементы.am_ГруппаАвто.Видимость = Результат;

КонецПроцедуры

&НаКлиенте
Процедура am_am_СписокАвтоПередНачаломДобавленияПосле(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Сообщить(Элемент);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоМоделиМарки()
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	am_ПодходящиеАвто.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.am_ПодходящиеАвто КАК am_ПодходящиеАвто
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Модель <> ЗНАЧЕНИЕ(Справочник.am_Модели.ПустаяСсылка)
	|				ТОГДА am_ПодходящиеАвто.Автомобиль = &Модель
	|			ИНАЧЕ am_ПодходящиеАвто.Автомобиль.Владелец = &Марка
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	am_ПодходящиеАвто.Номенклатура";
	
	Запрос.УстановитьПараметр("Модель",ОтборМодели);
	Запрос.УстановитьПараметр("Марка",ОтборМарки);
	
	СписокЗнч = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокЗнч.Добавить(Выборка.Номенклатура);
	КонецЦикла;
	
	ПереопределитьТекстЗапросаВСписках();
	УстановитьЗначениеОтбораДинамическогоСписка("Ссылка", СписокЗнч);
КонецПроцедуры

&НаСервере
Процедура ОтменаОтбораМаркиМодели()
	ПереформироватьЗапросыСписков();
	УстановитьЗначениеОтбораДинамическогоСписка("Ссылка", Неопределено, Ложь);
	УстановитьВидимостьИДоступность();
КонецПроцедуры	

&НаКлиенте
Процедура am_ОтборМаркиПриИзмененииПосле(Элемент)
	Если НЕ ОтборМарки.Пустая() ИЛИ НЕ ОтборМодели.Пустая() Тогда
		УстановитьОтборПоМоделиМарки();
	Иначе
		ОтменаОтбораМаркиМодели();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура am_ОтборМоделиПриИзмененииПосле(Элемент)
	Если НЕ ОтборМарки.Пустая() ИЛИ НЕ ОтборМодели.Пустая() Тогда
		УстановитьОтборПоМоделиМарки();
	Иначе
		ОтменаОтбораМаркиМодели();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура am_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	//СписокЗапасы.Параметры.УстановитьЗначениеПараметра("ВидЦен",ВидЦен);
КонецПроцедуры

&НаСервере
&Вместо("ПереопределитьТекстЗапросаСписокЗапасы")
Процедура Вместо_ПереопределитьТекстЗапросаСписокЗапасы()
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СправочникНоменклатура.Ссылка КАК Ссылка,
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	СправочникНоменклатура.ПометкаУдаления КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ПрямойАналог,
	|	СправочникНоменклатура.Родитель КАК Родитель,
	|	СправочникНоменклатура.ЭтоГруппа КАК ЭтоГруппа,
	|	СправочникНоменклатура.Код КАК Код,
	|	СправочникНоменклатура.Наименование КАК Наименование,
	|	СправочникНоменклатура.Артикул КАК Артикул,
	|	СправочникНоменклатура.ДатаИзменения КАК ДатаИзменения,
	|	СправочникНоменклатура.МетодОценки КАК МетодОценки,
	|	ВЫРАЗИТЬ(СправочникНоменклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеПолное,
	|	СправочникНоменклатура.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СправочникНоменклатура.КатегорияНоменклатуры КАК КатегорияНоменклатуры,
	|	СправочникНоменклатура.Поставщик КАК Поставщик,
	|	СправочникНоменклатура.Склад КАК Склад,
	|	СправочникНоменклатура.СпособПополнения КАК СпособПополнения,
	|	СправочникНоменклатура.СрокПополнения КАК СрокПополнения,
	|	СправочникНоменклатура.ВидСтавкиНДС КАК ВидСтавкиНДС,
	|	ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка) КАК СтавкаНДСНоменклатуры,
	|	СправочникНоменклатура.СчетУчетаЗапасов КАК СчетУчетаЗапасов,
	|	СправочникНоменклатура.СчетУчетаЗатрат КАК СчетУчетаЗатрат,
	|	СправочникНоменклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	|	СправочникНоменклатура.Ячейка КАК Ячейка,
	|	СправочникНоменклатура.ЦеноваяГруппа КАК ЦеноваяГруппа,
	|	СправочникНоменклатура.ИспользоватьХарактеристики КАК ИспользоватьХарактеристики,
	|	СправочникНоменклатура.ИспользоватьПартии КАК ИспользуетсяРезервирование,
	|	СправочникНоменклатура.ИспользоватьПартии КАК ИспользоватьПартии,
	|	СправочникНоменклатура.ЭтоНабор КАК ЭтоНабор,
	|	СправочникНоменклатура.Недействителен КАК Недействителен,
	|	СправочникНоменклатура.СрокИсполненияЗаказа КАК СрокИсполненияЗаказа,
	|	СправочникНоменклатура.НормаВремени КАК НормаВремени,
	|	СправочникНоменклатура.ФиксированнаяСтоимость КАК ФиксированнаяСтоимость,
	|	СправочникНоменклатура.СтранаПроисхождения КАК СтранаПроисхождения,
	|	СправочникНоменклатура.ВидАлкогольнойПродукции КАК ВидАлкогольнойПродукции,
	|	СправочникНоменклатура.ИмпортнаяАлкогольнаяПродукция КАК ИмпортнаяАлкогольнаяПродукция,
	|	СправочникНоменклатура.ПроизводительИмпортерАлкогольнойПродукции КАК ПроизводительИмпортерАлкогольнойПродукции,
	|	СправочникНоменклатура.Вес КАК Вес,
	|	СправочникНоменклатура.Объем КАК Объем,
	|	СправочникНоменклатура.ОбъемДАЛ КАК ОбъемДАЛ,
	|	СправочникНоменклатура.ИспользоватьСерийныеНомера КАК ИспользоватьСерийныеНомера,
	|	СправочникНоменклатура.ГарантийныйСрок КАК ГарантийныйСрок,
	|	СправочникНоменклатура.ПодконтрольнаяПродукцияВЕТИС КАК ПодконтрольнаяПродукцияВЕТИС,
	|	СправочникНоменклатура.ВыписыватьГарантийныйТалон КАК ВыписыватьГарантийныйТалон,
	|	ВЫБОР
	|		КОГДА НЕ СправочникНоменклатура.ЭтоНабор
	|				И НЕ(СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Операция)
	|						ИЛИ СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ВидРабот))
	|			ТОГДА 0
	|		ИНАЧЕ -1
	|	КОНЕЦ КАК КартинкаОстатки,
	|	СправочникНоменклатура.ПроверятьЗаполнениеПартий КАК ПроверятьЗаполнениеПартий,
	|	СправочникНоменклатура.ПроверятьЗаполнениеХарактеристики КАК ПроверятьЗаполнениеХарактеристики,
	|	0 КАК КартинкаКорзина,
	|	ПОДСТРОКА(СправочникНоменклатура.Комментарий, 1, 1000) КАК Комментарий,
	|	&Период КАК Период,
	|	&ВидЦен КАК ВидЦен,
	|	ВЫБОР
	|		КОГДА СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)
	|			ТОГДА 0
	|		КОГДА СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
	|			ТОГДА 4
	|		ИНАЧЕ 2
	|	КОНЕЦ + ВЫБОР
	|		КОГДА СправочникНоменклатура.ИспользоватьХарактеристики
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА СправочникНоменклатура.ПометкаУдаления
	|			ТОГДА 6
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА СправочникНоменклатура.ЭтоНабор
	|			ТОГДА 12
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВариантКартинки,
	|	СправочникНоменклатура.Родитель КАК Группа,
	|	ВЫБОР
	|		КОГДА НаличиеФайлов.ЕстьФайлы ЕСТЬ NULL
	|			ТОГДА 0
	|		КОГДА НаличиеФайлов.ЕстьФайлы
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьФайлы,
	|	&ДопПоляШаблон КАК ДопПоляШаблон
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаличиеФайлов КАК НаличиеФайлов
	|		ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами}";
	
	ВТТаблицаОстатков = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОстаткиТоваров.Номенклатура КАК Номенклатура,
	|	СУММА(ОстаткиТоваров.Количество) КАК Количество,
	|	СУММА(ОстаткиТоваров.Резерв) КАК Резерв
	|ПОМЕСТИТЬ ОстаткиТоваров
	|ИЗ
	|	РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
	|ГДЕ
	|	(&ВсеСклады
	|			ИЛИ ОстаткиТоваров.СтруктурнаяЕдиница = &Склад)
	|	И (&ВсеОрганизации
	|			ИЛИ ОстаткиТоваров.Организация = &Организация)
	|	И (&БезОтбора
	|			ИЛИ ОстаткиТоваров.Характеристика В (&Характеристика))
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиТоваров.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|";
	
	//Уберем это условие и всегда будем подтягивать цены
	Если Истина Тогда //Медленный способ с двумя левыми соединениями
		
		ТекстЗамены = "
		|ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения, СправочникНоменклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена";
		
		Если ПоказыватьОстатки Тогда
			ТекстЗамены = ТекстЗамены + ",
			|	ВЫБОР
			|		КОГДА ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|			ТОГДА ЕСТЬNULL(ОстаткиТоваров.Количество, 0) / ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ ЕСТЬNULL(ОстаткиТоваров.Количество, 0)
			|	КОНЕЦ КАК КоличествоОстаток,
			|	ВЫБОР
			|		КОГДА ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения ССЫЛКА Справочник.ЕдиницыИзмерения
			|			ТОГДА ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) / ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент
			|		ИНАЧЕ ЕСТЬNULL(ОстаткиТоваров.Резерв, 0)
			|	КОНЕЦ КАК Резерв";
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ДопПоляШаблон КАК ДопПоляШаблон", ТекстЗамены);
		
		Если ПоказыватьОстатки Или ОтборПоКоличеству Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами",
			"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, Актуальность И ВидЦен = &ВидЦен И Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяССылка)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = СправочникНоменклатура.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК ОстаткиТоваров
			|		ПО СправочникНоменклатура.Ссылка = ОстаткиТоваров.Номенклатура");
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами",
			"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза, Актуальность И ВидЦен = &ВидЦен И Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяССылка)) КАК ЦеныНоменклатурыСрезПоследних
			|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = СправочникНоменклатура.Ссылка");
		КонецЕсли;
		
		Если ПоказыватьОстатки Тогда
			ТекстЗапроса = ВТТаблицаОстатков + ТекстЗапроса;
		КонецЕсли;
		
	ИначеЕсли ПоказыватьЦены И ЦенаВСписке = 0 Тогда //без отбора по количеству
		
		Если Не ПоказыватьОстатки Тогда
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ДопПоляШаблон КАК ДопПоляШаблон", 
			"ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
			|	1 КАК Коэффициент,
			|	0 КАК Цена,
			|	0 КАК КоличествоОстаток,
			|	0 КАК Резерв");
			
		Иначе
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&ДопПоляШаблон КАК ДопПоляШаблон", 
			"ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
			|	1 КАК Коэффициент,
			|	0 КАК Цена,
			|	ЕСТЬNULL(ОстаткиТоваров.Количество, 0) КАК КоличествоОстаток,
			|	ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) КАК Резерв");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами",
			"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами
			|ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК ОстаткиТоваров
			|		ПО СправочникНоменклатура.Ссылка = ОстаткиТоваров.Номенклатура");
			
			ТекстЗапроса = ВТТаблицаОстатков + ТекстЗапроса;
			
		КонецЕсли;
		
	ИначеЕсли ОтборПоКоличеству Тогда //без отбора по ценам
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ДопПоляШаблон КАК ДопПоляШаблон",
		"ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
		|	1 КАК Коэффициент,
		|	0 КАК Цена,
		|	ЕСТЬNULL(ОстаткиТоваров.Количество, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) КАК Резерв");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами",
		"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК ОстаткиТоваров
		|		ПО СправочникНоменклатура.Ссылка = ОстаткиТоваров.Номенклатура");
		
		ТекстЗапроса = ВТТаблицаОстатков + ТекстЗапроса;
		
	ИначеЕсли ПоказыватьОстатки Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ДопПоляШаблон КАК ДопПоляШаблон",
		"	ЕСТЬNULL(ОстаткиТоваров.Количество, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) КАК Резерв,
		|	ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
		|	1 КАК Коэффициент,
		|	0 КАК Цена");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами",
		"ПО СправочникНоменклатура.Ссылка = НаличиеФайлов.ОбъектСФайлами
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК ОстаткиТоваров
		|		ПО СправочникНоменклатура.Ссылка = ОстаткиТоваров.Номенклатура");
		
		ТекстЗапроса = ВТТаблицаОстатков + ТекстЗапроса;
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ДопПоляШаблон КАК ДопПоляШаблон", 
		"ЕСТЬNULL(СправочникНоменклатура.ЕдиницаИзмерения, Значение(Справочник.ЕдиницыИзмерения.ПустаяСсылка)) КАК ЕдиницаИзмерения,
		|	1 КАК Коэффициент,
		|	0 КАК Цена,
		|	0 КАК КоличествоОстаток,
		|	0 КАК Резерв");
		
	КонецЕсли;
	
	Если ОтборОстатки = 1 И ПоказыватьОстатки Тогда
		
		ТекстЗапроса =	ТекстЗапроса +"
		|ГДЕ
		|	НЕ СправочникНоменклатура.ЭтоГруппа
		|	И (СправочникНоменклатура.ЭтоНабор
		|			ИЛИ СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
		|			ИЛИ СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Операция)
		|			ИЛИ (СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.ПодарочныйСертификат)
		|				ИЛИ СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас))
		|					И (ЕСТЬNULL(ОстаткиТоваров.Количество, 0) > 0
		|						ИЛИ ЕСТЬNULL(ОстаткиТоваров.Резерв, 0) > 0))";
		
	Если СписокОтбораХарактеристики.Количество() Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиТоваров КАК ОстаткиТоваров", "Полное СОЕДИНЕНИЕ ОстаткиТоваров КАК ОстаткиТоваров")
	КонецЕсли;
		
	Иначе
		ТекстЗапроса =	ТекстЗапроса +"
		|ГДЕ
		|	НЕ СправочникНоменклатура.ЭтоГруппа";
	КонецЕсли;
	
	Если ОтборПоЦенам И ТипЗнч(ОтборВидЦен) = Тип("СправочникСсылка.ВидыЦенКонтрагентов") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЦеныНоменклатуры.СрезПоследних", "ЦеныНоменклатурыКонтрагентов.СрезПоследних");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЦеныНоменклатурыСрезПоследних", "ЦеныНоменклатурыКонтрагентовСрезПоследних");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " ВидЦен", " ВидЦенКонтрагента");
	КонецЕсли;
	
	Если ЭтоПодбор Или РежимВыбора Тогда
		Если ЗначениеЗаполнено(ПериодЦен) И Не НачалоДня(ПериодЦен) = НачалоДня(ТекущаяДатаСеанса()) Тогда
			// Оставляем как есть
		Иначе
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДатаСреза", "");
		КонецЕсли;
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДатаСреза", "");
	КонецЕсли;
	
	ПараметрыСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	ПараметрыСписка.ТекстЗапроса = ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.СписокЗапасы, ПараметрыСписка);
	
КонецПроцедуры

&НаСервереБезКонтекста
&Вместо("ВывестиЦены")
Процедура Вместо_ВывестиЦены(Строки, Ссылки, ВидЦен, ПоказыватьЦены, ДатаСреза, РаботаСЗакупками = Ложь)
	Возврат;//Цены мы всегда получаем
	Если Не ПоказыватьЦены Тогда
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСЗакупками Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
		|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаСреза
		|			,
		|			ВидЦен = &ВидЦен
		|				И Номенклатура В (&Ссылки)
		|				И Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ЦеныНоменклатурыСрезПоследних");
		
	Иначе
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦеныНоменклатурыКонтрагентовСрезПоследних.Номенклатура КАК Номенклатура,
		|	ЦеныНоменклатурыКонтрагентовСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(ЦеныНоменклатурыКонтрагентовСрезПоследних.ЕдиницаИзмерения.Коэффициент, 1) КАК Коэффициент,
		|	ЦеныНоменклатурыКонтрагентовСрезПоследних.Цена КАК Цена
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатурыКонтрагентов.СрезПоследних(&ДатаСреза
		|			,
		|			ВидЦенКонтрагента = &ВидЦен
		|				И Номенклатура В (&Ссылки)
		|				И Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ЦеныНоменклатурыКонтрагентовСрезПоследних");
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	Запрос.УстановитьПараметр("ВидЦен", ВидЦен);
	
	Если ЗначениеЗаполнено(ДатаСреза) Тогда
		Запрос.УстановитьПараметр("ДатаСреза", ДатаСреза);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ДатаСреза", "");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаСписка = Строки.Получить(Выборка.Номенклатура).Данные;
		
		СтрокаСписка.Цена = Выборка.Цена;
		СтрокаСписка.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		СтрокаСписка.КоличествоОстаток = Окр(СтрокаСписка.КоличествоОстаток/Выборка.Коэффициент, 3, РежимОкругления.Окр15как20);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
&Вместо("УстановитьОтборДляАналогов")
Процедура Вместо_УстановитьОтборДляАналогов()
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Владелец", ЗначениеДляОтбораАналогов);
	
	СписокЗнч = Новый СписокЗначений;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	АналогиНоменклатуры.Аналог КАК Аналог,
|	ЛОЖЬ КАК АналогРодитель
|ПОМЕСТИТЬ Итог
|ИЗ
|	РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
|ГДЕ
|	АналогиНоменклатуры.Номенклатура = &Владелец

|ОБЪЕДИНИТЬ

|ВЫБРАТЬ
|	АналогиНоменклатуры.Номенклатура,
|	ИСТИНА
|ИЗ
|	РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
|ГДЕ
|	АналогиНоменклатуры.Аналог = &Владелец

|ОБЪЕДИНИТЬ

|ВЫБРАТЬ
|	АналогиНоменклатуры.Аналог,
|	ЛОЖЬ
|ИЗ
|	(ВЫБРАТЬ
|		АналогиНоменклатуры.Номенклатура КАК Оригинал
|	ИЗ
|		РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
|	ГДЕ
|		АналогиНоменклатуры.Аналог = &Владелец) КАК ВложенныйЗапрос
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
|		ПО (ВложенныйЗапрос.Оригинал = АналогиНоменклатуры.Номенклатура)
|ГДЕ
|	АналогиНоменклатуры.Аналог <> &Владелец
|;

|////////////////////////////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗЛИЧНЫЕ
|	Итог.Аналог КАК Аналог,
|	Итог.АналогРодитель КАК АналогРодитель
|ИЗ
|	Итог КАК Итог";
	
	ВыборкаАналоговПервыйУровень = Запрос.Выполнить().Выбрать();
	
	ИтоговыйМассив = Новый Массив;
	
	Пока ВыборкаАналоговПервыйУровень.Следующий() Цикл
		
		Если ВыборкаАналоговПервыйУровень.АналогРодитель Тогда
			ПрямыеАналоги.Добавить(ВыборкаАналоговПервыйУровень.Аналог);
		КонецЕсли;
		
		ИтоговыйМассив.Добавить(ВыборкаАналоговПервыйУровень.Аналог);
		
	КонецЦикла;
	
	Для Каждого ЭлементМассива Из ИтоговыйМассив Цикл
		СписокЗнч.Добавить(ЭлементМассива);
	КонецЦикла;
	
	УстановитьЗначениеОтбораДинамическогоСписка("Ссылка", СписокЗнч);
	СписокЗапасы.КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ПрямыеАналоги", ПрямыеАналоги);
	
КонецПроцедуры

&НаСервере
&Вместо("ОбновитьДанныеПоНоменклатуреСервер")
Процедура Вместо_ОбновитьДанныеПоНоменклатуреСервер(Номенклатура, Характертистика = Неопределено, ЕдиницаИзмерения = Неопределено)
	
	// Изображения
	Если ПоказыватьКартинку И Не ТекущаяСтраницаНоменклатуры = "ДеревоОстатки" Тогда
		ОбновитьИзображение(Номенклатура);
	КонецЕсли;
	
	// Сопутствующие товары
	Если ПоказыватьСопутствующиеТовары Тогда
		
		ТекстЗаголовка = "";
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СУММА(ЕСТЬNULL(ОстаткиТоваров.Количество, 0)) КАК Количество,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СопутствующиеТовары.СопутствующийТовар) КАК КоличествоПозиций,
		|	МАКСИМУМ(СопутствующиеТовары.СопутствующийТовар.ЕдиницаИзмерения.Наименование) КАК ЕдиницаИзмерения
		|ИЗ
		|	РегистрСведений.СопутствующиеТовары КАК СопутствующиеТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
		|		ПО СопутствующиеТовары.СопутствующийТовар = ОстаткиТоваров.Номенклатура
		|ГДЕ
		|	СопутствующиеТовары.Номенклатура = &Номенклатура";
		
		Если ТекущаяСтраницаНоменклатуры = "ДеревоОстатки" Тогда
			Характертистика = ?(Не ТипЗнч(Характертистика) = Тип("СправочникСсылка.ХарактеристикиНоменклатуры"), Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка(), Характертистика);
			Запрос.УстановитьПараметр("Характертистика", Характертистика);
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "СопутствующиеТовары.Номенклатура = &Номенклатура", "СопутствующиеТовары.Номенклатура = &Номенклатура
			|	И СопутствующиеТовары.Характеристика = &Характертистика");
		КонецЕсли;
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Если Выборка.КоличествоПозиций = 0 Тогда
				ТекстЗаголовка = НСтр("ru = 'Нет сопутствующих товаров'");
			Иначе
				
				ТекстСопТовар = ПредметИсчисления(
				Выборка.КоличествоПозиций,
				НСтр("ru = 'сопутствующий товар'"),
				НСтр("ru = 'сопутствующих товара'"),
				НСтр("ru = 'сопутствующих товаров'"),
				"м");
				
				ТекстЗаголовка = НСтр("ru = '%1% / %2%'");
				
				ТекстКоличество = ?(Не ЗначениеЗаполнено(Выборка.Количество), "0", Строка(Выборка.Количество));
				
				ТекстСопТовар = Строка(Выборка.КоличествоПозиций) + ТекстСопТовар;
				
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%1%", ТекстКоличество  + ?(Выборка.КоличествоПозиций = 1, " " + Выборка.ЕдиницаИзмерения, НСтр("ru = ' ед.'")));
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%2%", ТекстСопТовар);
				
			КонецЕсли;
			
		КонецЕсли;
		
		НадписьСопутствующийТовар = ТекстЗаголовка;
		
	КонецЕсли;
	
	Если НЕ ТекущаяСтраницаНоменклатуры = "ДеревоОстатки" Тогда
		
		// Аналоги
		Если ПоказыватьАналоги Тогда
			
			Если Номенклатура.ЭтоНабор Тогда 
				НадписьАналогиНоменклатуры = НСтр("ru = 'Аналоги недоступны для наборов'");
			Иначе
				ТекстЗаголовка = "";
				
				Если Не Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
					НадписьАналогиНоменклатуры = НСтр("ru = 'Аналоги доступны только для запасов'");
				Иначе
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
					
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
					|	АналогиНоменклатуры.Аналог КАК Аналог,
					|	АналогиНоменклатуры.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения
					|ПОМЕСТИТЬ ВТОбщая
					|ИЗ
					|	РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
					|ГДЕ
					|	АналогиНоменклатуры.Номенклатура = &Номенклатура
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	АналогиНоменклатуры.Номенклатура,
					|	АналогиНоменклатуры.Номенклатура.ЕдиницаИзмерения.Наименование
					|ИЗ
					|	РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
					|ГДЕ
					|	АналогиНоменклатуры.Аналог = &Номенклатура
					|ОБЪЕДИНИТЬ ВСЕ
					|ВЫБРАТЬ
					|	АналогиНоменклатуры.Аналог,
					|	АналогиНоменклатуры.Номенклатура.ЕдиницаИзмерения.Наименование
					|ИЗ
					|	(ВЫБРАТЬ
					|		АналогиНоменклатуры.Номенклатура КАК Оригинал
					|	ИЗ
					|		РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
					|	ГДЕ
					|		АналогиНоменклатуры.Аналог = &Номенклатура) КАК ВложенныйЗапрос
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналогиНоменклатуры КАК АналогиНоменклатуры
					|		ПО (ВложенныйЗапрос.Оригинал = АналогиНоменклатуры.Номенклатура)
					|ГДЕ
					|	АналогиНоменклатуры.Аналог <> &Номенклатура
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	МАКСИМУМ(ВТОбщая.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
					|	СУММА(ЕСТЬNULL(ОстаткиТоваров.Количество, 0)) КАК Количество,
					|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТОбщая.Аналог) КАК КоличествоПозиций
					|ПОМЕСТИТЬ Итог
					|ИЗ
					|	ВТОбщая КАК ВТОбщая
					|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОстаткиТоваров КАК ОстаткиТоваров
					|		ПО ВТОбщая.Аналог = ОстаткиТоваров.Номенклатура
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	МАКСИМУМ(Итог.ЕдиницаИзмерения) КАК ЕдиницаИзмерения,
					|	СУММА(Итог.Количество) КАК Количество,
					|	СУММА(Итог.КоличествоПозиций) КАК КоличествоПозиций
					|ИЗ
					|	Итог КАК Итог";
					
					Выборка = Запрос.Выполнить().Выбрать();
					
					Если Выборка.Следующий() Тогда
						
						Если Выборка.КоличествоПозиций = 0 Тогда
							
							ТекстЗаголовка = НСтр("ru = 'Нет аналогов'");
							
						Иначе
							
							ТекстАналоги = ПредметИсчисления(
							Выборка.КоличествоПозиций,
							НСтр("ru = 'aналог'"),
							НСтр("ru = 'аналога'"),
							НСтр("ru = 'аналогов'"),
							"м");
							
							ТекстЗаголовка = НСтр("ru = '%1% / %2%'");
							
							ТекстКоличество = ?(Не ЗначениеЗаполнено(Выборка.Количество), "0", Строка(Выборка.Количество));
							
							ТекстАналоги = Строка(Выборка.КоличествоПозиций) + ТекстАналоги;
							
							ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%1%", ТекстКоличество + ?(Выборка.КоличествоПозиций = 1, " " + Выборка.ЕдиницаИзмерения, НСтр("ru = ' ед.'")));
							ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%2%", ТекстАналоги); 
							
						КонецЕсли;
						
					КонецЕсли;
					
					НадписьАналогиНоменклатуры = ТекстЗаголовка;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Цена
		Если ПоказыватьЦены И ЦенаВСписке = 1 И ЗначениеЗаполнено(ОтборВидЦен) Тогда
			
			ВалютаЦены = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОтборВидЦен, "ВалютаЦены", Истина);
			Если ВалютаЦены<>ВалютаПодбора Тогда
				ПересчитатьЦеныСуммыКорзиныВВалюту(ВалютаЦены);
			КонецЕсли; 
			
			ВалютаПодбора = ВалютаЦены;
			ВалютаПредставление = УправлениеНебольшойФирмойПовтИсп.ПолучитьСимвольноеПредставлениеВалюты(ВалютаПодбора);
			СимвольноеПредставление = ?(ЗначениеЗаполнено(ВалютаПредставление), " " + ВалютаПредставление, "");
			
			ТекстЗаголовка = "";
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
			Запрос.УстановитьПараметр("ВидЦен", ОтборВидЦен);
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
			|ИЗ
			|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
			|			,
			|			ВидЦен = &ВидЦен
			|				И Номенклатура = &Номенклатура
			|				И Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяССылка)) КАК ЦеныНоменклатурыСрезПоследних";
			
			Выборка = Запрос.Выполнить().Выбрать();
			
			Если Выборка.Следующий() Тогда
				ТекстЗаголовка = НСтр("ru = '%1%: %2% %3%'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%1%", Строка(ОтборВидЦен));
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%2%", Строка(Выборка.Цена));
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%3%", СимвольноеПредставление);
			Иначе
				ТекстЗаголовка = НСтр("ru = '%1%: <отсутствует>'");
				ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%1%", Строка(ОтборВидЦен));
			КонецЕсли;
			НадписьЦена = ТекстЗаголовка;
		КонецЕсли;
		
		// Панель остатков
		ОбновитьПанельОстатков(Номенклатура, ЕдиницаИзмерения);
	КонецЕсли;
	Если НЕ ТекущаяСтраницаНоменклатуры = "ДеревоОстатки" Тогда
		
		// Автомобили
			
			Если Номенклатура.ЭтоНабор Тогда 
				am_НадписьАвто = НСтр("ru = 'Данные недоступны для наборов'");
			Иначе
				ТекстЗаголовка = "";
				
				Если Не Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас Тогда
					am_НадписьАвто = НСтр("ru = 'Данные доступны только для запасов'");
				Иначе
					
					КоличествоПозиций = 0;
					am_СписокАвто.Очистить();
					
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
					
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	am_ПодходящиеАвто.Автомобиль КАК Автомобиль
					|ИЗ
					|	РегистрСведений.am_ПодходящиеАвто КАК am_ПодходящиеАвто
					|ГДЕ
					|	am_ПодходящиеАвто.Номенклатура = &Номенклатура";
					
					Выборка = Запрос.Выполнить().Выбрать();
					
					Пока Выборка.Следующий() Цикл					
						
						КоличествоПозиций = КоличествоПозиций + 1;
					
					    НоваяСтрока = am_СписокАвто.Добавить();
						НоваяСтрока.Значение = Выборка.Автомобиль;
					
					КонецЦикла;
					
					Если КоличествоПозиций = 0 Тогда
						
						ТекстЗаголовка = НСтр("ru = 'Нет автомобилей'");
						
					Иначе
						
						ТекстНадписи = ПредметИсчисления(
						КоличествоПозиций,
						НСтр("ru = 'автомобиль'"),
						НСтр("ru = 'автомобиля'"),
						НСтр("ru = 'автомобилей'"),
						"м");
						
						ТекстЗаголовка = НСтр("ru = '%1%'");
						
						ТекстАвтомобили = Строка(КоличествоПозиций) + ТекстНадписи;
						
						ТекстЗаголовка = СтрЗаменить(ТекстЗаголовка, "%1%", ТекстАвтомобили); 
						
					КонецЕсли;
					
					am_НадписьАвто = ТекстЗаголовка;
					
				КонецЕсли;
				
			КонецЕсли;
		
		// Панель остатков
		ОбновитьПанельОстатков(Номенклатура, ЕдиницаИзмерения);
	КонецЕсли;
	
КонецПроцедуры
