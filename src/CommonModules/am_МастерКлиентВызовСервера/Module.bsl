Процедура НайтиСоздатьКонтрагентаНаСервисе(ПодстрокаТелефона, ОграничениеПоКоличеству, ПолеПоиска = "phone")
	
	Если НЕ РегистрыСведений.am_ХранилищеНастроек.ПолучитьОбменССТО() Тогда
		Возврат;
	КонецЕсли;
	
	HTTPСоединение = Новый HTTPСоединение("31.163.200.98", 20080,,,,, Неопределено, Ложь);
	HTTPЗапрос = Новый HTTPЗапрос("/api/1.0/clients.json?" + ПолеПоиска + "=" + ПодстрокаТелефона + "&limit=" + Формат(ОграничениеПоКоличеству, "ЧГ="));
	Ответ = HTTPСоединение.ВызватьHTTPМетод("GET", HTTPЗапрос);
	
	Если Ответ.КодСостояния <> 200 Тогда
		Возврат;
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(Ответ.ПолучитьТелоКакСтроку("UTF-8"));
	ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
	
	Если Тип("Структура") = ТипЗнч(ДанныеJSON) Тогда
		СоздатьКонтрагента(ДанныеJSON);
	КонецЕсли;
	
	Если Тип("Массив") = ТипЗнч(ДанныеJSON) Тогда
		Для каждого СтруктураJSON из ДанныеJSON Цикл
			СоздатьКонтрагента(СтруктураJSON);
		КонецЦикла;
	КонецЕсли;
	//Возврат НайтиКонтрагентаПоТелефону(ПодстрокаТелефона);
	
КонецПроцедуры

Процедура СоздатьКонтрагента(СтруктураJSON)
	
	Если НЕ СтруктураJSON.Свойство("uuid") Тогда
		Возврат;
	КонецЕсли;	
	
	Контакт = Справочники.КонтактныеЛица.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураJSON.uuid));
	
	Если Контакт.ПолучитьОбъект() = Неопределено Тогда
		КонтактОбъект = Справочники.КонтактныеЛица.СоздатьЭлемент();
		КонтактОбъект.УстановитьСсылкуНового(Контакт);
		КонтактОбъект.Наименование = СтруктураJSON.fio;
		УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(КонтактОбъект, СтруктураJSON.telephone, Справочники.ВидыКонтактнойИнформации.ТелефонКонтактногоЛица);
		
		Если ЗначениеЗаполнено(СтруктураJSON.email) Тогда
			УправлениеКонтактнойИнформацией.ДобавитьКонтактнуюИнформацию(КонтактОбъект, СтруктураJSON.email, Справочники.ВидыКонтактнойИнформации.EmailКонтактногоЛица);
		КонецЕсли;
		
		КонтактОбъект.Заполнить(Неопределено);
		КонтактОбъект.Записать();
	КонецЕсли;	
	
	Контрагент = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураJSON.uuid));
	
	Если Контрагент.ПолучитьОбъект() = Неопределено Тогда
		КонтрагентОбъект = Справочники.Контрагенты.СоздатьЭлемент();
		КонтрагентОбъект.УстановитьСсылкуНового(Контрагент);
		КонтрагентОбъект.Покупатель = Истина;
		КонтрагентОбъект.Наименование = СтруктураJSON.fio;
		КонтрагентОбъект.Заполнить(Неопределено);
		КонтрагентОбъект.Записать();
		ДобавитьСообщениеПользователю("Создан контрагент " + Строка(СтруктураJSON.fio));
	КонецЕсли;
	
	РегистрыСведений.СвязиКонтрагентКонтакт.НоваяСвязь(Контрагент, Контакт);
	
	Если Тип("Структура") = ТипЗнч(СтруктураJSON.autos) Тогда
		СоздатьАвтобомиль(СтруктураJSON.autos, Контрагент);
	КонецЕСли;
	
	Если Тип("Массив") = ТипЗнч(СтруктураJSON.autos) Тогда
		Для Каждого СтруктураАвто Из СтруктураJSON.autos Цикл
			СоздатьАвтобомиль(СтруктураАвто, Контрагент);
		КонецЦикла;	
	КонецЕСли;
	
КонецПроцедуры

Процедура ДобавитьСообщениеПользователю(Текст)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = Текст;
	
КонецПроцедуры

Процедура СоздатьАвтобомиль(СтруктураJSON, Контрагент)
	
	Автомобиль = Справочники.am_Автомобили.ПолучитьСсылку(Новый УникальныйИдентификатор(СтруктураJSON.uuid));
	
	Если Автомобиль.ПолучитьОбъект() = Неопределено Тогда
		АвтомобильОбъект = Справочники.am_Автомобили.СоздатьЭлемент();
		АвтомобильОбъект.УстановитьСсылкуНового(Автомобиль);
		АвтомобильОбъект.VIN = СтруктураJSON.vin;
		АвтомобильОбъект.ВладелецАвто = Контрагент;
		АвтомобильОбъект.Владелец = Контрагент;
		АвтомобильОбъект.ГосударственныйРегистрационныйЗнак = СтруктураJSON.number;
		АвтомобильОбъект.Модель = ПолучитьМодельАвтомобиля(СтруктураJSON.model, СтруктураJSON.marka);
		АвтомобильОбъект.ОбъёмДвигателя = СтруктураJSON.volume;
		АвтомобильОбъект.Наименование = АвтомобильОбъект.Модель.Наименование + " " + АвтомобильОбъект.ГосударственныйРегистрационныйЗнак;
		АвтомобильОбъект.Записать();
		ДобавитьСообщениеПользователю("Создан автомобиль " + АвтомобильОбъект.Наименование);
	КонецЕсли;
	
	Если Автомобиль.Владелец <> Контрагент Тогда
		АвтомобильОбъект = Автомобиль.ПолучитьОбъект();
		АвтомобильОбъект.Владелец = Контрагент;
		АвтомобильОбъект.Записать();
		ДобавитьСообщениеПользователю("У автомобиля " + АвтомобильОбъект.Наименование + " изменился владелец на " + Строка(Контрагент));
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьМодельАвтомобиля(МодельJSON, МаркаJSON)
	
	Если МодельJSON.Свойство("uuid") Тогда
		Модель = Справочники.am_Модели.ПолучитьСсылку(Новый УникальныйИдентификатор(МодельJSON.uuid));
		Если Модель.ПолучитьОбъект() = Неопределено Тогда
			Марка = Справочники.am_Марки.ПолучитьСсылку(Новый УникальныйИдентификатор(МаркаJSON.uuid));
			Если Марка.ПолучитьОбъект() = Неопределено Тогда
				МаркаОбъект = Справочники.am_Марки.СоздатьЭлемент();
				МаркаОбъект.УстановитьСсылкуНового(Марка);
				МаркаОбъект.Наименование = МаркаJSON.name;
				МаркаОбъект.Записать();
			КонецЕсли;
			МодельОбъект = Справочники.am_Модели.СоздатьЭлемент();
			МодельОбъект.УстановитьСсылкуНового(Модель);
			МодельОбъект.Наименование = МодельJSON.name;
			МодельОбъект.Владелец = Марка;
			МодельОбъект.Записать();
		КонецЕсли;
		Возврат Модель;
	Иначе
		Возврат Справочники.am_Модели.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция НайтиКонтрагентаПоТелефону(ПодстрокаТелефона, ОграничениеПоКоличеству)
	
	ПоисковоеВыражение = СтрЗаменить(ПодстрокаТелефона, "+", "") + "%";
	
	Если СтрНачинаетсяС(ПоисковоеВыражение, "7") Или СтрНачинаетсяС(ПоисковоеВыражение, "8") Тогда
		ПоисковоеВыражение = "[78]" + Сред(ПоисковоеВыражение, 2);
	Иначе
		ПоисковоеВыражение = "%" + ПоисковоеВыражение;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПоисковоеВыражение", ПоисковоеВыражение); 
	Запрос.Текст = "ВЫБРАТЬ Первые " + Формат(ОграничениеПоКоличеству, "ЧГ=") + "
	               |	ВложенныйЗапрос.Контрагент КАК Контрагент,
	               |	ВложенныйЗапрос.Телефон КАК Телефон
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		КонтрагентыКонтактнаяИнформация.Ссылка КАК Контрагент,
	               |		КонтрагентыКонтактнаяИнформация.НомерТелефона КАК Телефон
	               |	ИЗ
	               |		Справочник.Контрагенты.КонтактнаяИнформация КАК КонтрагентыКонтактнаяИнформация
	               |	ГДЕ
	               |		КонтрагентыКонтактнаяИнформация.НомерТелефона ПОДОБНО &ПоисковоеВыражение
	               |		И КонтрагентыКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	               |	
	               |	ОБЪЕДИНИТЬ
	               |	
	               |	ВЫБРАТЬ
	               |		СвязиКонтрагентКонтактСрезПоследних.Контрагент,
	               |		ВложенныйЗапрос.НомерТелефона
	               |	ИЗ
	               |		РегистрСведений.СвязиКонтрагентКонтакт.СрезПоследних КАК СвязиКонтрагентКонтактСрезПоследних
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				КонтактныеЛицаКонтактнаяИнформация.Ссылка КАК Контакт,
	               |				КонтактныеЛицаКонтактнаяИнформация.НомерТелефона КАК НомерТелефона
	               |			ИЗ
	               |				Справочник.КонтактныеЛица.КонтактнаяИнформация КАК КонтактныеЛицаКонтактнаяИнформация
	               |			ГДЕ
	               |				КонтактныеЛицаКонтактнаяИнформация.НомерТелефона ПОДОБНО &ПоисковоеВыражение
	               |				И КонтактныеЛицаКонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)) КАК ВложенныйЗапрос
	               |			ПО СвязиКонтрагентКонтактСрезПоследних.Контакт = ВложенныйЗапрос.Контакт) КАК ВложенныйЗапрос";
	
	Контрагенты = Запрос.Выполнить().Выгрузить();
	
	Если Контрагенты.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе	
		Возврат Контрагенты;
	КонецЕсли;
	
КонецФункции

Функция НайтиКонтрагентаПоВИН(ПодстрокаПоиска, ОграничениеПоКоличеству)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПоисковоеВыражение", "%" + ПодстрокаПоиска + "%");
	//Первые "+Формат(ОграничениеПоКоличеству,"ЧГ=") +" 
	Запрос.Текст = "ВЫБРАТЬ Первые " + Формат(ОграничениеПоКоличеству, "ЧГ=") + " 
	               |	am_Автомобили.Владелец КАК Контрагент,
	               |	am_Автомобили.VIN КАК VIN
	               |ИЗ
	               |	Справочник.am_Автомобили КАК am_Автомобили
	               |ГДЕ
	               |	am_Автомобили.VIN ПОДОБНО &ПоисковоеВыражение";
	
	Контрагенты = Запрос.Выполнить().Выгрузить();
	
	Если Контрагенты.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе	
		Возврат Контрагенты;
	КонецЕсли;
	
КонецФункции

Функция НайтиКонтрагентаПоГосНомеру(ПодстрокаПоиска, ОграничениеПоКоличеству)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПоисковоеВыражение", "%" + ПодстрокаПоиска + "%");
	//Первые "+Формат(ОграничениеПоКоличеству,"ЧГ=") +" 
	
	Запрос.Текст = "ВЫБРАТЬ Первые " + Формат(ОграничениеПоКоличеству, "ЧГ=") + " 
	               |	am_Автомобили.Владелец КАК Контрагент
	               |ИЗ
	               |	Справочник.am_Автомобили КАК am_Автомобили
	               |ГДЕ
	               |	am_Автомобили.ГосударственныйРегистрационныйЗнак ПОДОБНО &ПоисковоеВыражение";
	
	Контрагенты = Запрос.Выполнить().Выгрузить();
	
	Если Контрагенты.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе	
		Возврат Контрагенты;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКонтрагентаСпискомЗначений(ПодстрокаПоиска, ОграничениеПоКоличеству = 10, ПолеПоиска = "Телефон") Экспорт
	
	Если ПолеПоиска = "Телефон" Тогда
		НайтиСоздатьКонтрагентаНаСервисе(ПодстрокаПоиска, ОграничениеПоКоличеству, "phone");
	ИначеЕсли ПолеПоиска = "ВИН" Тогда
		НайтиСоздатьКонтрагентаНаСервисе(ПодстрокаПоиска, ОграничениеПоКоличеству, "vin");
	ИначеЕсли ПолеПоиска = "ГосНомер" Тогда
		НайтиСоздатьКонтрагентаНаСервисе(ПодстрокаПоиска, ОграничениеПоКоличеству, "number");
	КонецЕсли;
	
	Контрагент = Неопределено;
	
	Если ПолеПоиска = "Телефон" Тогда
		Контрагент = НайтиКонтрагентаПоТелефону(ПодстрокаПоиска, ОграничениеПоКоличеству);
	ИначеЕсли ПолеПоиска = "ВИН" Тогда
		Контрагент = НайтиКонтрагентаПоВИН(ПодстрокаПоиска, ОграничениеПоКоличеству);
	ИначеЕсли ПолеПоиска = "ГосНомер" Тогда
		Контрагент = НайтиКонтрагентаПоГосНомеру(ПодстрокаПоиска, ОграничениеПоКоличеству);
	КонецЕсли;
	
	ДанныеОтвета = Новый СписокЗначений;
	
	Если Контрагент <> Неопределено Тогда
		Для каждого СтрокаКонтрагента из Контрагент Цикл
			ДанныеОтвета.Добавить(СтрокаКонтрагента.Контрагент);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеОтвета;
	
КонецФункции	
	
Функция ПодборАвто(Контрагент) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	am_Автомобили.Ссылка КАК Автомобиль
	               |ИЗ
	               |	Справочник.am_Автомобили КАК am_Автомобили
	               |ГДЕ
	               |	am_Автомобили.Владелец = &Контрагент
	               |	И НЕ am_Автомобили.ПометкаУдаления";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Автомобиль;
	Иначе
		Возврат Справочники.am_Автомобили.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция _ПолучитьСообщенияПользователю(УдалятьСообщения) Экспорт
	
	Возврат ПолучитьСообщенияПользователю(УдалятьСообщения);
	
КонецФункции