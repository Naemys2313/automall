

#Область ПрограммныйИнтерфейс

Функция ВалютаУчета() Экспорт
	Возврат Константы.ВалютаУчета.Получить()
КонецФункции


#КонецОбласти

#Область Подписки_на_события



#КонецОбласти

#Область СлужебныеПроцедурыИФункции





#Область Упущенный_спрос

Функция ПолучитьНаименованиеПоТекстуПоиска(ТекстПоиска, Пользователь) Экспорт

	Попытка
		//http://am.hkit.ru/search/one/?n=111222444
		HTTPСоединение = Новый HTTPСоединение("am.hkit.ru");
		
		ЗапросHTTP = Новый HTTPЗапрос;
		ЗапросHTTP.АдресРесурса = "search/one/?n="+ТекстПоиска+"&uid="+XMLСтрока(Пользователь);
		ЗапросHTTP.Заголовки["Content-Type"] = "application/json";
		
		ОтветHTTP = HTTPСоединение.Получить(ЗапросHTTP);
		
		Если ОтветHTTP.КодСостояния = 200 Тогда
			ОтветСервиса = ОтветHTTP.ПолучитьТелоКакСтроку();	
		Иначе
			ЗаписьЖурналаРегистрации(
				"Сервис am.hkit.ru/search/one", 
				УровеньЖурналаРегистрации.Ошибка,
				,
				, 
				"Запрос:" + ЗапросHTTP.АдресРесурса + Символы.ПС + "Ответ: " + ОтветHTTP.КодСостояния + Символы.ПС + ОтветHTTP.ПолучитьТелоКакСтроку());
				
			Возврат "";
		КонецЕсли;
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(ОтветСервиса);

		Результат = ПрочитатьJSON(ЧтениеJSON, Истина);

		Если ТипЗнч(Результат) <> Тип("Соответствие") Тогда
			ЗаписьЖурналаРегистрации(
				"Сервис am.hkit.ru/search/one", 
				УровеньЖурналаРегистрации.Ошибка,
				,
				, 
				"Получен неожиданные ответ сервиса!" + Символы.ПС + 
				"Запрос:" + ЗапросHTTP.АдресРесурса + Символы.ПС + 
				"Ответ: " + ОтветHTTP.ПолучитьТелоКакСтроку());
				
			Возврат "";
		КонецЕсли;
		
		Если Результат["status"] = Истина Тогда
			Деталь = Результат["product"];
			Наименование = "%Номер% / %Наименование% / %Производитель%";
			Наименование = СтрЗаменить(Наименование, "%Номер%", Деталь["n"]);
			Наименование = СтрЗаменить(Наименование, "%Наименование%", Деталь["nm"]);
			Наименование = СтрЗаменить(Наименование, "%Производитель%", Деталь["manufacturer"]);
			
			Возврат Наименование;
		КонецЕсли;
		
		Возврат "";
	Исключение
	    ЗаписьЖурналаРегистрации(
				"Сервис am.hkit.ru/search/one", 
				УровеньЖурналаРегистрации.Ошибка,
				,
				, 
				ОписаниеОшибки());
				
		Возврат "";
	КонецПопытки;
	
КонецФункции 

#КонецОбласти


Функция РазместитьНаФормеГруппу(ЭтаФорма, Имя, Параметры) Экспорт
	
	ИндексДействия = (ЭтаФорма.ТаблицаДинамическихЭлементов.Количество() + 1);
	
	Группа = ЭтаФорма.Элементы.Добавить(Имя + ИндексДействия, Тип("ГруппаФормы"), Параметры.Владелец);
	Группа.Вид = Параметры.Образец.Вид;
	Группа.Высота = 1;
	
	Если Параметры.Образец.Вид = ВидГруппыФормы.ОбычнаяГруппа Тогда
		Группа.Группировка 				= Параметры.Образец.Группировка;
		Группа.ОтображатьЗаголовок 		= Ложь;
		Группа.РастягиватьПоГоризонтали = Параметры.Образец.РастягиватьПоГоризонтали;
		Группа.РастягиватьПоВертикали	= Ложь;
		
	КонецЕсли;
	
	Строка = ЭтаФорма.ТаблицаДинамическихЭлементов.Добавить();
	Строка.Наименование = Группа.Имя;
	
	Если Параметры.ЭтоСтрока Тогда
		Строка.НомерСтроки  = ЭтаФорма.ТекущаяСтрока;
	КонецЕсли;
	
	Возврат Группа
	
КонецФункции

Функция РазместитьНаФормеКартинку(ЭтаФорма, Имя, Параметры) Экспорт
	
	ИндексДействия = (ЭтаФорма.ТаблицаДинамическихЭлементов.Количество() + 1);
	
	Декорация = ЭтаФорма.Элементы.Добавить("" + Имя + ИндексДействия, Тип("ДекорацияФормы"), Параметры.Владелец);
	Декорация.Вид = ВидДекорацииФормы.Картинка;
	
	Декорация.Картинка = Параметры.Образец.Картинка;
	
	Декорация.Ширина = Параметры.Образец.Ширина;
	Декорация.Высота = Параметры.Образец.Высота;
	Декорация.АвтоМаксимальнаяШирина = Параметры.Образец.АвтоМаксимальнаяШирина;
	Декорация.АвтоМаксимальнаяВысота = Параметры.Образец.АвтоМаксимальнаяВысота;
	Декорация.ГоризонтальноеПоложениеВГруппе = Параметры.Образец.ГоризонтальноеПоложениеВГруппе;
	Декорация.ВертикальноеПоложениеВГруппе = Параметры.Образец.ВертикальноеПоложениеВГруппе;
	Декорация.РастягиватьПоГоризонтали = Параметры.Образец.РастягиватьПоГоризонтали;
	Декорация.РастягиватьПоВертикали = Параметры.Образец.РастягиватьПоВертикали;
	Декорация.Доступность = Параметры.Образец.Доступность;
	Декорация.Масштаб = Параметры.Образец.Масштаб;
	Декорация.Масштабировать = Параметры.Образец.Масштабировать;

	Если НЕ Параметры.ПроцедураНажатие = "" Тогда 
		Декорация.УстановитьДействие("Нажатие", Параметры.ПроцедураНажатие);
		Декорация.Гиперссылка = Истина;
		
	КонецЕсли;
	
	Строка = ЭтаФорма.ТаблицаДинамическихЭлементов.Добавить();
	Строка.Наименование = Декорация.Имя;
	Строка.НомерСтроки  = ЭтаФорма.ТекущаяСтрока;
	
	Возврат Декорация
	
КонецФункции

Функция РазместитьНаФормеПоле(ЭтаФорма, Имя, Параметры) Экспорт

	ЗачеркнутыйШрифт = Новый Шрифт(ШрифтыСтиля.ОбычныйШрифтТекста,,,,,, Истина);
	ИндексДействия = ЭтаФорма.УникальныйИдентификатор;
	
	Поле = ЭтаФорма.Элементы.Добавить("" + Имя + 1, Тип("ПолеФормы"), Параметры.Владелец);
	
	Поле.Вид 							= Параметры.Образец.Вид;
	Поле.ПутьКДанным 					= Параметры.ПутьКДанным;
	Поле.ПоложениеЗаголовка 			= Параметры.Образец.ПоложениеЗаголовка;
	Поле.Заголовок 						= Параметры.Образец.Заголовок;
	Поле.ПодсказкаВвода 				= Параметры.Образец.ПодсказкаВвода;
	Поле.КнопкаВыбора 					= Параметры.Образец.КнопкаВыбора;
	Поле.КнопкаВыпадающегоСписка 		= Параметры.Образец.КнопкаВыпадающегоСписка;
	Поле.КнопкаСоздания 				= Параметры.Образец.КнопкаСоздания;
	Поле.КнопкаОткрытия 				= Параметры.Образец.КнопкаОткрытия;
	Поле.КнопкаРегулирования 			= Параметры.Образец.КнопкаРегулирования;
	Поле.ЦветРамки 						= Параметры.Образец.ЦветРамки;
	Поле.ЦветТекста 					= Параметры.Образец.ЦветТекста;
	Поле.ЦветРамки 						= Параметры.Образец.ЦветРамки;
	Поле.Шрифт 							= Параметры.Образец.Шрифт;
	Поле.АвтоМаксимальнаяШирина 		= Параметры.Образец.АвтоМаксимальнаяШирина;
	Поле.МаксимальнаяШирина 			= Параметры.Образец.МаксимальнаяШирина;
	Поле.ВертикальноеПоложениеВГруппе 	= Параметры.Образец.ВертикальноеПоложениеВГруппе;
	Поле.ГоризонтальноеПоложение 		= Параметры.Образец.ГоризонтальноеПоложение;
	Поле.Ширина 						= Параметры.Образец.Ширина;
	
	Поле.УстановитьДействие("ОбработкаВыбора", 		"НаименованиеКонтактногоЛица_ОбработкаВыбора");
	Поле.УстановитьДействие("НачалоВыбора", 		"НаименованиеКонтактногоЛица_НачалоВыбора");
	Поле.УстановитьДействие("ИзменениеТекстаРедактирования", "НаименованиеКонтактногоЛица_ИзменениеТекстаРедактирования");
	Поле.УстановитьДействие("ОкончаниеВводаТекста", Параметры.ПроцедураОкончаниеВводаТекста);
	Поле.УстановитьДействие("ПриИзменении", 		Параметры.ПроцедураПриИзменении);
	Поле.УстановитьДействие("Открытие", 			Параметры.ПроцедураОткрытие);
	Поле.УстановитьДействие("Регулирование", 		Параметры.ПроцедураРегулирование);
	
	Возврат Поле
	
КонецФункции

Функция РазместитьНаФормеНадпись(ЭтаФорма, Имя, Параметры) Экспорт
	
	Декорация = ЭтаФорма.Элементы.Добавить(Имя, Тип("ДекорацияФормы"), Параметры.Владелец);
	Декорация.Вид 								= ВидДекорацииФормы.Надпись;
	Декорация.Заголовок 						= Параметры.Заголовок;
	Декорация.ЦветТекста 						= Параметры.Образец.ЦветТекста;
	Декорация.ЦветРамки 						= Параметры.Образец.ЦветРамки;
	Декорация.Шрифт 							= Параметры.Шрифт;
	Декорация.Ширина 							= Параметры.Образец.Ширина;
	Декорация.Высота 							= Параметры.Образец.Высота;
	Декорация.АвтоМаксимальнаяШирина 			= Параметры.Образец.АвтоМаксимальнаяШирина;
	Декорация.АвтоМаксимальнаяВысота 			= Параметры.Образец.АвтоМаксимальнаяВысота;
	Декорация.ГоризонтальноеПоложениеВГруппе 	= Параметры.Образец.ГоризонтальноеПоложениеВГруппе;
	Декорация.ВертикальноеПоложениеВГруппе 		= Параметры.Образец.ВертикальноеПоложениеВГруппе;
	Декорация.ГоризонтальноеПоложение 			= ГоризонтальноеПоложениеЭлемента.Лево;
	Декорация.ВертикальноеПоложение 			= ВертикальноеПоложениеЭлемента.Центр;
	Декорация.РастягиватьПоГоризонтали 			= Параметры.Образец.РастягиватьПоГоризонтали;
	Декорация.РастягиватьПоВертикали 			= Параметры.Образец.РастягиватьПоВертикали;
	
	Декорация.УстановитьДействие("Нажатие", Параметры.ПроцедураНажатие);
	Декорация.Гиперссылка 						= Параметры.Образец.Гиперссылка;
	
	Строка = ЭтаФорма.ТаблицаДинамическихЭлементов.Добавить();
	Строка.Наименование = Декорация.Имя;
	
	Если Параметры.ЭтоСтрока Тогда
		Строка.НомерСтроки  = ЭтаФорма.ТекущаяСтрока;
		
		Если ЗначениеЗаполнено(Параметры.Действие.ДействиеСсылка) Тогда
			Строка.СсылкаНаОбъект = Параметры.Действие.ДействиеСсылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Декорация
	
	
	//Если Имя = "НадписьНаименованиеДействие_" Тогда
	//	Декорация.Гиперссылка = Истина;	
	//	Декорация.УстановитьДействие("Нажатие", Параметры.ПроцедураНажатие);
	//	Декорация.Заголовок = Параметры.Действие.Описание;

	//	Если Параметры.Действие.Статус = Перечисления.obisoft_ККЗ_СостояниеДействий.Завершена Тогда
	//		Декорация.Шрифт = ЗачеркнутыйШрифт;
	//	Иначе
	//		Декорация.Шрифт = Параметры.Образец.Шрифт;
	//	КонецЕсли;
	//	
	//КонецЕсли;

КонецФункции

Функция am_РассчитатьСуммуНДСИВсего(СтрокаТабличнойЧасти) Экспорт
	

	
КонецФункции
#КонецОбласти
