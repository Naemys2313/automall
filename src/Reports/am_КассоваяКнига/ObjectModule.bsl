#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Возвращает сведения о внешней обработке.
//
// Возвращаемое значение:
//   Структура - Подробнее см. ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке().
//
Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.4.6.40");
	
	ПараметрыРегистрации.Информация = НСтр("ru = 'Кассовая книга (КО-4)'");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительныйОтчет();
	ПараметрыРегистрации.Версия = "1.19";
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Кассовая книга (КО-4)'");
	Команда.Идентификатор = "am_КассоваяКнига";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();

	Возврат ПараметрыРегистрации;
	
КонецФункции

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

Процедура ПриОпределенииНастроекОтчета(НастройкиОтчета, НастройкиВариантов) Экспорт
	
	НастройкиВариантов["Основной"].Рекомендуемый = Истина;
	
	УстановитьТегиВариантов(НастройкиВариантов);
	ДобавитьОписанияСвязанныхПолей(НастройкиВариантов);  
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); 	
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;	
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.НачатьВывод();
	
	КоличествоЛистов = 0;
	
	Пока Истина Цикл
		
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
		
		Если ЭлементРезультата = Неопределено Тогда
			
			Прервать;
			
		Иначе
			
			Если ДокументРезультат.ВысотаТаблицы > 0			
				И ЭлементРезультата.ЗначенияПараметров.Количество() > 0
				И ЭлементРезультата.ЗначенияПараметров[0].Значение = "Разорвать" Тогда
				
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				
				КоличествоЛистов = КоличествоЛистов + 1;
				
			КонецЕсли;   	
			
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод(); 	
	
	ВариантПечатиПоследнегоЛиста = Настройки.ПараметрыДанных.Элементы.Найти("ВариантПоследнегоЛиста");
	
	Если ВариантПечатиПоследнегоЛиста <> Неопределено
		И ВариантПечатиПоследнегоЛиста.Значение = "ПоследнийВГоду" Тогда
		
		ВывестиОбложкуКассовойКниги(ДокументРезультат, Настройки, КоличествоЛистов);
		
	КонецЕсли;	   
	
	ДокументРезультат.ИмяПараметровПечати = "КАССОВАЯ_КНИГА";	
	ДокументРезультат.ОтображатьЗаголовки = Истина;
	
КонецПроцедуры

Процедура ВывестиОбложкуКассовойКниги(ДокументРезультат, Настройки, КоличествоЛистов) 
	
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	
	ЭлементОрганизация	= Настройки.ПараметрыДанных.Элементы.Найти("Организация");		
	ЭлементКасса		= Настройки.ПараметрыДанных.Элементы.Найти("Касса");		
	ЭлементПериод		= Настройки.ПараметрыДанных.Элементы.Найти("Период");
	ЭлементБухгалтер	= Настройки.ПараметрыДанных.Элементы.Найти("Бухгалтер");
	ПоследнийНомерЛиста = Настройки.ПараметрыДанных.Элементы.Найти("ПоследнийНомерЛистаКассовойКниги");
	
	КонецПериода = ЭлементПериод.Значение.ДатаОкончания;
	
	Касса		= ЭлементКасса.Значение;
	Организация	= ЭлементОрганизация.Значение;
	
	Макет = ПолучитьМакет("Обложка");	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Обложка");
	
	СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(Организация, КонецПериода);
	
	ОбластьМакета.Параметры.НазваниеОрганизации		= УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	ОбластьМакета.Параметры.НадписьОбложка			= " на " + Формат(ЭлементПериод.Значение.ДатаОкончания, "ДФ=yyyy") + " г."; 
	ОбластьМакета.Параметры.КодПоОКПО				= СведенияОбОрганизации.КодПоОКПО;	
	
	ДокументРезультат.Вывести(ОбластьМакета);
	
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();   	
	
	ОбластьМакета = Макет.ПолучитьОбласть("ПослДеньГода");
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, КонецПериода, "ФИОРук,ДолжнРук,ФИОБух");
	
	ОбластьМакета.Параметры.ФИОРуководителя			= ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СведенияОбОрганизации.ФИОРук);
	ОбластьМакета.Параметры.ДолжностьРуководителя	= СведенияОбОрганизации.ДолжнРук;
	ОбластьМакета.Параметры.КоличествоЛистов		= (КоличествоЛистов + 1);
	
	Если ЗначениеЗаполнено(ЭлементБухгалтер.Значение) Тогда
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(КонецПериода, ЭлементБухгалтер.Значение);
		
	Иначе
		
		ОбластьМакета.Параметры.ФИОГлавБухгалтера = ФизическиеЛицаКлиентСервер.ФамилияИнициалы(СведенияОбОрганизации.ФИОБух);
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбластьМакета);   	
	
КонецПроцедуры

Процедура УстановитьТегиВариантов(НастройкиВариантов)
	
	НастройкиВариантов["Основной"].Теги = НСтр("ru = 'Деньги,Касса'");
	
КонецПроцедуры

Процедура ДобавитьОписанияСвязанныхПолей(НастройкиВариантов)
	
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["Основной"].СвязанныеПоля, "Организация", "Справочник.Организации");
	ОтчетыУНФ.ДобавитьОписаниеПривязки(НастройкиВариантов["Основной"].СвязанныеПоля, "Касса", "Справочник.Кассы");
	
КонецПроцедуры

#КонецОбласти

ЭтоОтчетУНФ = Истина;

#КонецЕсли
