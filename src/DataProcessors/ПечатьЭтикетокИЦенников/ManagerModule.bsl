
&Вместо("СформироватьПечатныеФормыЭтикетокИЦенников")
Функция am_СформироватьПечатныеФормыЭтикетокИЦенников(НастройкиПечати, ПечататьЭтикетки, ПечататьЦенники)
	Эталон = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("Эталон");
	КоличествоМиллиметровВПикселе = Эталон.Рисунки.Квадрат100Пикселей.Высота / 100;
	
	// Подготовка коллекции печатных форм.
	КоллекцияПечатныхФорм = Новый ТаблицаЗначений;
	КоллекцияПечатныхФорм.Колонки.Добавить("ИмяМакета");
	КоллекцияПечатныхФорм.Колонки.Добавить("ТабличныйДокумент");
	КоллекцияПечатныхФорм.Колонки.Добавить("ИмяКолонкиКоличество");
	КоллекцияПечатныхФорм.Колонки.Добавить("ИмяКолонкиШаблон");
	КоллекцияПечатныхФорм.Колонки.Добавить("Шаблон");
	
	Для Каждого КлючИЗначение Из НастройкиПечати.СоответствиеШаблоновИСтруктурыШаблонов Цикл
		Если ПечататьЭтикетки Тогда
			ПечатнаяФорма = КоллекцияПечатныхФорм.Добавить();
			ПечатнаяФорма.ИмяМакета            = "Этикетка"+КлючИЗначение.Ключ;
			ПечатнаяФорма.ИмяКолонкиКоличество = "КоличествоЭтикетокДляПечати";
			ПечатнаяФорма.ИмяКолонкиШаблон     = "ШаблонЭтикеткиДляПечати";
			ПечатнаяФорма.Шаблон = КлючИЗначение.Ключ;
		КонецЕсли;
		
		Если ПечататьЦенники Тогда
			ПечатнаяФорма = КоллекцияПечатныхФорм.Добавить();
			ПечатнаяФорма.ИмяМакета            = "Ценник" + КлючИЗначение.Ключ;
			ПечатнаяФорма.ИмяКолонкиКоличество = "КоличествоЦенниковДляПечати";
			ПечатнаяФорма.ИмяКолонкиШаблон     = "ШаблонЦенникаДляПечати";
			ПечатнаяФорма.Шаблон = КлючИЗначение.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		
		Если ПечатнаяФорма.Шаблон._ЧислоЦенниковНаМакете > 1 Тогда
			
			//+АняновМА
			ЧислоЦенниковНаМакете = ПечатнаяФорма.Шаблон._ЧислоЦенниковНаМакете;
			ТекущийЦенникНаМакете = 0;
			МассивОбластейЦенника = Новый Массив;
			//-АняновМА
			
			НомерКолонки = 0;
			НомерРяда = 0;
			
			ОписаниеШаблона = Новый Структура;
			ОписаниеШаблона.Вставить("Шаблон", ПечатнаяФорма.Шаблон);
			ОписаниеШаблона.Вставить("ИмяКолонкиШаблон", ПечатнаяФорма.ИмяКолонкиШаблон);
			ДанныеДляПечати = ПодготовитьДанныеДляПечати(НастройкиПечати, ОписаниеШаблона);
			
			ВременныйТабличныйДокумент = Новый ТабличныйДокумент;
			
			Для Каждого СтрокаТовары Из ДанныеДляПечати.ТаблицаТоваров Цикл
				
				Если СтрокаТовары[ПечатнаяФорма.ИмяКолонкиКоличество] > 0
					И СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон] = ПечатнаяФорма.Шаблон Тогда
					
					ОписаниеШаблона = НастройкиПечати.СоответствиеШаблоновИСтруктурыШаблонов.Получить(СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон]);
					
					Если ПечатнаяФорма.ТабличныйДокумент = Неопределено Тогда
						
						Если СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон].ТипШаблона <> Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
							ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
						Иначе
							ПечатнаяФорма.ТабличныйДокумент = Новый Структура;
							ПечатнаяФорма.ТабличныйДокумент.Вставить("XML", ОписаниеШаблона.XMLОписаниеМакета);
							ПечатнаяФорма.ТабличныйДокумент.Вставить("Этикетки", Новый Массив);
						КонецЕсли;
						
					КонецЕсли;
					
					Если ОписаниеШаблона <> Неопределено 
						И ТипЗнч(ОписаниеШаблона) = Тип("Структура")
						И СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон].ТипШаблона <> Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
						
						ТекущийЦенникНаМакете = ТекущийЦенникНаМакете + 1;
						Если ТекущийЦенникНаМакете > ЧислоЦенниковНаМакете Тогда
							ТекущийЦенникНаМакете = 1;
						КонецЕсли;
						Если ТекущийЦенникНаМакете = 1 Тогда
							
							Область = ОписаниеШаблона.МакетЭтикетки.ПолучитьОбласть(ОписаниеШаблона.ИмяОбластиПечати);
							
							//+АняновМА
							МассивОбластейЦенника.Очистить();
							
							НачалоОбласти = Лев(ОписаниеШаблона.ИмяОбластиПечати, Найти(ОписаниеШаблона.ИмяОбластиПечати, ":") - 1);
							КонецОбласти = Прав(ОписаниеШаблона.ИмяОбластиПечати, СтрДлина(ОписаниеШаблона.ИмяОбластиПечати) - Найти(ОписаниеШаблона.ИмяОбластиПечати, ":"));
							
							ПерваяСтрока = Число(СтрЗаменить(Лев(НачалоОбласти, Найти(НачалоОбласти, "C") - 1), "R", ""));
							ПерваяКолонка = Число(Прав(НачалоОбласти, СтрДлина(НачалоОбласти) - Найти(НачалоОбласти, "C")));
							
							ПоследняяСтрока = Число(СтрЗаменить(Лев(КонецОбласти, Найти(КонецОбласти, "C") - 1), "R", ""));
							ПоследняяКолонка = Число(Прав(КонецОбласти, СтрДлина(КонецОбласти) - Найти(КонецОбласти, "C")));
							
							Для СчетчикОбласти = 1 По ЧислоЦенниковНаМакете Цикл
								ОбластьЦенника = "R" + Формат(ПерваяСтрока + СчетчикОбласти, "ЧН=0; ЧГ=0") + "C" + Формат(ПерваяКолонка, "ЧН=0; ЧГ=0") + ":R" + Формат(ПерваяСтрока + СчетчикОбласти, "ЧН=0; ЧГ=0") + "C" + Формат(ПоследняяКолонка, "ЧН=0; ЧГ=0");
								МассивОбластейЦенника.Добавить(ОписаниеШаблона.МакетЭтикетки.ПолучитьОбласть(ОбластьЦенника));
							КонецЦикла;
							//-АняновМА
							
						КонецЕсли;
						
						ПроверятьВывод = Ложь;
						
						Для ИндексСтроки = 1 По Область.ВысотаТаблицы Цикл
							
							Если Область.Область("R" + Формат(ИндексСтроки, "ЧН=0; ЧГ=0")).АвтоВысотаСтроки Тогда
								ПроверятьВывод = Истина;
								Прервать;
							КонецЕсли;
							
						КонецЦикла;
						
						// Применение настроек табличного документа.
						ЗаполнитьЗначенияСвойств(ПечатнаяФорма.ТабличныйДокумент, ОписаниеШаблона.МакетЭтикетки, , "ОбластьПечати");
						
						//Установка параметров печати
						ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Этикетки_и_ценники" + ПечатнаяФорма.ИмяМакета;
						
						Для каждого ПараметрШаблона Из ОписаниеШаблона.ПараметрыШаблона Цикл
							Если ЕстьРеквизитОбъекта(Область.Параметры, ПараметрШаблона.Значение) Тогда
								НаименованиеКолонки = ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(Справочники.ХранилищеШаблонов.ИмяПоляВШаблоне(ПараметрШаблона.Ключ));
								Если НаименованиеКолонки <> Неопределено Тогда
									// служебные поля
									//+АняновМА, было:
									//Область.Параметры[ПараметрШаблона.Значение] = СтрокаТовары[НаименованиеКолонки];
									//стало:
									МассивОбластейЦенника[ТекущийЦенникНаМакете - 1].Параметры[ПараметрШаблона.Значение] = СтрокаТовары[НаименованиеКолонки];
									//-АняновМА								
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						
						//+АняновМА
						ОбластьЦенника = "R" + Формат(ТекущийЦенникНаМакете + 1, "ЧН=0; ЧГ=0") + "C" + Формат(1, "ЧН=0; ЧГ=0") + ":R" + Формат(ТекущийЦенникНаМакете + 1, "ЧН=0; ЧГ=0") + "C" + Формат(Область.ШиринаТаблицы, "ЧН=0; ЧГ=0");
						ОбластьТекущегоЦенника = "R" + Формат(1, "ЧН=0; ЧГ=0") + "C" + Формат(1, "ЧН=0; ЧГ=0") + ":R" + Формат(МассивОбластейЦенника[ТекущийЦенникНаМакете - 1].ВысотаТаблицы, "ЧН=0; ЧГ=0") + "C" + Формат(МассивОбластейЦенника[ТекущийЦенникНаМакете - 1].ШиринаТаблицы, "ЧН=0; ЧГ=0");
						Область.ВставитьОбласть(МассивОбластейЦенника[ТекущийЦенникНаМакете - 1].Область(ОбластьТекущегоЦенника), Область.Область(ОбластьЦенника),, Истина);
						//-АняновМА
						
						Для каждого Рисунок Из Область.Рисунки Цикл
							Если Лев(Рисунок.Имя,8) = ИмяПараметраШтрихкод() или Лев(Рисунок.Имя,13) = ИмяПараметраШтрихкодСправкиБ() Тогда
								
								Если Лев(Рисунок.Имя,8) = ИмяПараметраШтрихкод() Тогда
									ЗначениеШтрихкода = СтрокаТовары[ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(ИмяПараметраШтрихкод())];
								ИначеЕсли Лев(Рисунок.Имя,13) = ИмяПараметраШтрихкодСправкиБ() Тогда
									ЗначениеШтрихкода = СтрокаТовары[ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(ИмяПараметраШтрихкодСправкиБ())];
								КонецЕсли;
								
								Если ЗначениеЗаполнено(ЗначениеШтрихкода) Тогда
									
									ПараметрыШтрихкода = Новый Структура;
									ПараметрыШтрихкода.Вставить("Ширина",	Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе));
									ПараметрыШтрихкода.Вставить("Высота",	Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе));
									
									Если ОписаниеШаблона.ТипКода = 16 Тогда
										МинСторона = Мин(ПараметрыШтрихкода.Ширина, ПараметрыШтрихкода.Высота);
										ПараметрыШтрихкода.Ширина = МинСторона;
										ПараметрыШтрихкода.Высота = МинСторона;
									КонецЕсли;
									
									Если ОписаниеШаблона.Свойство("УровеньКоррекцииQR") Тогда
										ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", ОписаниеШаблона.УровеньКоррекцииQR);
									Иначе
										ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", 0);
									КонецЕсли;
									
									ПараметрыШтрихкода.Вставить("Штрихкод",				ЗначениеШтрихкода);
									ПараметрыШтрихкода.Вставить("ТипКода",				ОписаниеШаблона.ТипКода);
									
									Если ОписаниеШаблона.Свойство("ОтображатьТекст") Тогда
										ПараметрыШтрихкода.Вставить("ОтображатьТекст",		ОписаниеШаблона.ОтображатьТекст);
									Иначе
										ПараметрыШтрихкода.Вставить("ОтображатьТекст",		Истина);
									КонецЕсли;
									
									Если ОписаниеШаблона.Свойство("РазмерШрифта") Тогда
										ПараметрыШтрихкода.Вставить("РазмерШрифта",			ОписаниеШаблона.РазмерШрифта);
									КонецЕсли;
									
									Если ОписаниеШаблона.Свойство("УголПоворота") Тогда
										ПараметрыШтрихкода.Вставить("УголПоворота", ОписаниеШаблона.УголПоворота);
									КонецЕсли;
									
									Рисунок.Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
									
								КонецЕсли;
								
							КонецЕсли;
						КонецЦикла;
						
						Для Инд = 1 По СтрокаТовары[ПечатнаяФорма.ИмяКолонкиКоличество] Цикл // Цикл по количеству экземпляров.
							
							Если ТекущийЦенникНаМакете = ЧислоЦенниковНаМакете Тогда
								
								МассивОбластей = Новый Массив;
								МассивОбластей.Добавить(Область);
								
								НомерКолонки = НомерКолонки + 1;
								
								Если ПроверятьВывод Тогда
									
									Если НомерКолонки = 1 Тогда
										Если Не ВременныйТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
											ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
											НомерРяда = 0;
											ВременныйТабличныйДокумент.Очистить();
										КонецЕсли;
									Иначе
										Если Не ВременныйТабличныйДокумент.ПроверитьПрисоединение(МассивОбластей) Тогда
											ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
											НомерРяда    = 0;
											ВременныйТабличныйДокумент.Очистить();
										КонецЕсли;
									КонецЕсли;
									
								КонецЕсли;
								
								Если НомерКолонки = 1 Тогда
									
									НомерРяда = НомерРяда + 1;
									
									ПечатнаяФорма.ТабличныйДокумент.Вывести(Область);
									ВременныйТабличныйДокумент.Вывести(Область);
									
								Иначе
									
									ПечатнаяФорма.ТабличныйДокумент.Присоединить(Область);
									ВременныйТабличныйДокумент.Присоединить(Область);
									
								КонецЕсли;
								
								Если НомерКолонки = ОписаниеШаблона.КоличествоПоГоризонтали И НомерРяда = ОписаниеШаблона.КоличествоПоВертикали Тогда
									
									НомерРяда    = 0;
									НомерКолонки = 0;
									
									ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
									ВременныйТабличныйДокумент.Очистить();
									
								ИначеЕсли НомерКолонки = ОписаниеШаблона.КоличествоПоГоризонтали Тогда
									
									НомерКолонки = 0;
									
								КонецЕсли;
								//+АняновМА
							КонецЕсли;
							//-АняновМА
							
						КонецЦикла; // Цикл по количеству экземпляров.
						
					КонецЕсли;
					
					Если ОписаниеШаблона <> Неопределено 
						И ТипЗнч(ОписаниеШаблона) = Тип("Структура")
						И СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон].ТипШаблона = Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
						Поля = Новый Массив;
						Для Каждого ТекПоле Из ОписаниеШаблона.ПоляМакета Цикл			
							Если ТекПоле.ТипЗаполнения = "Parameter" Тогда							
								НовоеПоле = Новый Структура;
								НовоеПоле.Вставить("ИмяПоля", ТекПоле.Наименование);							
								Попытка
									Значение = Вычислить("СтрокаТовары." + ТекПоле.Значение);
								Исключение
									Значение = "";
								КонецПопытки;
								Если Значение = "" Тогда
									Попытка
										ИмяКолонки = ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(ТекПоле.Значение);
										Значение = Вычислить("СтрокаТовары." + ИмяКолонки);
									Исключение
										Значение = "";
									КонецПопытки;
								КонецЕсли;
								Если ТипЗнч(Значение) = Тип("ХранилищеЗначения") Тогда								
									Значение = Значение.Получить();								
									Если ТипЗнч(Значение) = Тип("ДвоичныеДанные") Тогда
										Значение = Base64Строка(Значение);
									Иначе
										Значение = Строка(Значение);
									КонецЕсли;								
								ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.НоменклатураПрисоединенныеФайлы") Тогда
									
									Если Значение.ТипХраненияФайла = ПредопределенноеЗначение("Перечисление.ТипыХраненияФайлов.ВИнформационнойБазе") Тогда
										АдресХранилища = РаботаСФайлами.ДанныеФайла(Значение).СсылкаНаДвоичныеДанныеФайла;
										Значение = ПолучитьИзВременногоХранилища(АдресХранилища);
									КонецЕсли;
									
									Если ТипЗнч(Значение) = Тип("ДвоичныеДанные") Тогда
										Значение = Base64Строка(Значение);
									Иначе
										Значение = Строка(Значение);
									КонецЕсли;
									
								КонецЕсли;							
								Если ЗначениеЗаполнено(Значение) Тогда
									НовоеПоле.Вставить("Значение", Значение);
								Иначе								
									Если ЗначениеЗаполнено(ТекПоле.ЗначениеПоУмолчанию) Тогда						
										НовоеПоле.Вставить("Значение", ТекПоле.ЗначениеПоУмолчанию);
									Иначе
										НовоеПоле.Вставить("Значение", "");
									КонецЕсли;								
								КонецЕсли;
								
								Поля.Добавить(НовоеПоле);
								
							КонецЕсли;
							
						КонецЦикла;
						НоваяЭтикетка = Новый Структура;
						НоваяЭтикетка.Вставить("Количество", СтрокаТовары[ПечатнаяФорма.ИмяКолонкиКоличество]);
						НоваяЭтикетка.Вставить("ЗначенияПолей", Поля);
						ПечатнаяФорма.ТабличныйДокумент.Этикетки.Добавить(НоваяЭтикетка);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла; // Цикл по строкам таблицы товаров.
			
			//+АняновМА, выводим остатки...
			Если ТекущийЦенникНаМакете < ЧислоЦенниковНаМакете Тогда
			//-АняновМА
				
				МассивОбластей = Новый Массив;
				МассивОбластей.Добавить(Область);
				
				НомерКолонки = НомерКолонки + 1;
				
				Если ПроверятьВывод Тогда
					
					Если НомерКолонки = 1 Тогда
						Если Не ВременныйТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
							ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							НомерРяда = 0;
							ВременныйТабличныйДокумент.Очистить();
						КонецЕсли;
					Иначе
						Если Не ВременныйТабличныйДокумент.ПроверитьПрисоединение(МассивОбластей) Тогда
							ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
							НомерРяда    = 0;
							ВременныйТабличныйДокумент.Очистить();
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
				Если НомерКолонки = 1 Тогда
					
					НомерРяда = НомерРяда + 1;
					
					ПечатнаяФорма.ТабличныйДокумент.Вывести(Область);
					ВременныйТабличныйДокумент.Вывести(Область);
					
				Иначе
					
					ПечатнаяФорма.ТабличныйДокумент.Присоединить(Область);
					ВременныйТабличныйДокумент.Присоединить(Область);
					
				КонецЕсли;
				
				Если НомерКолонки = ОписаниеШаблона.КоличествоПоГоризонтали И НомерРяда = ОписаниеШаблона.КоличествоПоВертикали Тогда
					
					НомерРяда    = 0;
					НомерКолонки = 0;
					
					ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					ВременныйТабличныйДокумент.Очистить();
					
				ИначеЕсли НомерКолонки = ОписаниеШаблона.КоличествоПоГоризонтали Тогда
					
					НомерКолонки = 0;
					
				КонецЕсли;
			//+АняновМА
			КонецЕсли;
			//-АняновМА
					
		Иначе
			//штатный алгоритм!
			НомерКолонки = 0;
			НомерРяда = 0;
			
			ОписаниеШаблона = Новый Структура;
			ОписаниеШаблона.Вставить("Шаблон", ПечатнаяФорма.Шаблон);
			ОписаниеШаблона.Вставить("ИмяКолонкиШаблон", ПечатнаяФорма.ИмяКолонкиШаблон);
			ДанныеДляПечати = ПодготовитьДанныеДляПечати(НастройкиПечати, ОписаниеШаблона);
			
			ВременныйТабличныйДокумент = Новый ТабличныйДокумент;
			
			Для Каждого СтрокаТовары Из ДанныеДляПечати.ТаблицаТоваров Цикл
				
				Если СтрокаТовары[ПечатнаяФорма.ИмяКолонкиКоличество] > 0
					И СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон] = ПечатнаяФорма.Шаблон Тогда
					
					ОписаниеШаблона = НастройкиПечати.СоответствиеШаблоновИСтруктурыШаблонов.Получить(СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон]);
					
					Если ПечатнаяФорма.ТабличныйДокумент = Неопределено Тогда
						
						Если СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон].ТипШаблона <> Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
							ПечатнаяФорма.ТабличныйДокумент = Новый ТабличныйДокумент;
						Иначе
							ПечатнаяФорма.ТабличныйДокумент = Новый Структура;
							ПечатнаяФорма.ТабличныйДокумент.Вставить("XML", ОписаниеШаблона.XMLОписаниеМакета);
							ПечатнаяФорма.ТабличныйДокумент.Вставить("Этикетки", Новый Массив);
						КонецЕсли;
						
					КонецЕсли;
					
					Если ОписаниеШаблона <> Неопределено 
						И ТипЗнч(ОписаниеШаблона) = Тип("Структура")
						И СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон].ТипШаблона <> Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
						
						Область = ОписаниеШаблона.МакетЭтикетки.ПолучитьОбласть(ОписаниеШаблона.ИмяОбластиПечати);
						
						ПроверятьВывод = Ложь;
						
						Для ИндексСтроки = 1 По Область.ВысотаТаблицы Цикл
							
							Если Область.Область("R" + Формат(ИндексСтроки, "ЧН=0; ЧГ=0")).АвтоВысотаСтроки Тогда
								ПроверятьВывод = Истина;
								Прервать;
							КонецЕсли;
							
						КонецЦикла;
						
						// Применение настроек табличного документа.
						ЗаполнитьЗначенияСвойств(ПечатнаяФорма.ТабличныйДокумент, ОписаниеШаблона.МакетЭтикетки, , "ОбластьПечати");
						
						//Установка параметров печати
						ПечатнаяФорма.ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Этикетки_и_ценники" + ПечатнаяФорма.ИмяМакета;
						
						Для каждого ПараметрШаблона Из ОписаниеШаблона.ПараметрыШаблона Цикл
							Если ЕстьРеквизитОбъекта(Область.Параметры, ПараметрШаблона.Значение) Тогда
								НаименованиеКолонки = ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(Справочники.ХранилищеШаблонов.ИмяПоляВШаблоне(ПараметрШаблона.Ключ));
								Если НаименованиеКолонки <> Неопределено Тогда
									// служебные поля
									Область.Параметры[ПараметрШаблона.Значение] = СтрокаТовары[НаименованиеКолонки];
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						
						Для каждого Рисунок Из Область.Рисунки Цикл
							Если Лев(Рисунок.Имя,8) = ИмяПараметраШтрихкод() или Лев(Рисунок.Имя,13) = ИмяПараметраШтрихкодСправкиБ() Тогда
								
								Если Лев(Рисунок.Имя,8) = ИмяПараметраШтрихкод() Тогда
									ЗначениеШтрихкода = СтрокаТовары[ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(ИмяПараметраШтрихкод())];
								ИначеЕсли Лев(Рисунок.Имя,13) = ИмяПараметраШтрихкодСправкиБ() Тогда
									ЗначениеШтрихкода = СтрокаТовары[ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(ИмяПараметраШтрихкодСправкиБ())];
								КонецЕсли;
								
								Если ЗначениеЗаполнено(ЗначениеШтрихкода) Тогда
									
									ПараметрыШтрихкода = Новый Структура;
									ПараметрыШтрихкода.Вставить("Ширина",	Окр(Рисунок.Ширина / КоличествоМиллиметровВПикселе));
									ПараметрыШтрихкода.Вставить("Высота",	Окр(Рисунок.Высота / КоличествоМиллиметровВПикселе));
									
									Если ОписаниеШаблона.ТипКода = 16 Тогда
										МинСторона = Мин(ПараметрыШтрихкода.Ширина, ПараметрыШтрихкода.Высота);
										ПараметрыШтрихкода.Ширина = МинСторона;
										ПараметрыШтрихкода.Высота = МинСторона;
									КонецЕсли;
									
									Если ОписаниеШаблона.Свойство("УровеньКоррекцииQR") Тогда
										ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", ОписаниеШаблона.УровеньКоррекцииQR);
									Иначе
										ПараметрыШтрихкода.Вставить("УровеньКоррекцииQR", 0);
									КонецЕсли;
									
									ПараметрыШтрихкода.Вставить("Штрихкод",				ЗначениеШтрихкода);
									ПараметрыШтрихкода.Вставить("ТипКода",				ОписаниеШаблона.ТипКода);
									
									Если ОписаниеШаблона.Свойство("ОтображатьТекст") Тогда
										ПараметрыШтрихкода.Вставить("ОтображатьТекст",		ОписаниеШаблона.ОтображатьТекст);
									Иначе
										ПараметрыШтрихкода.Вставить("ОтображатьТекст",		Истина);
									КонецЕсли;
									
									Если ОписаниеШаблона.Свойство("РазмерШрифта") Тогда
										ПараметрыШтрихкода.Вставить("РазмерШрифта",			ОписаниеШаблона.РазмерШрифта);
									КонецЕсли;
									
									Если ОписаниеШаблона.Свойство("УголПоворота") Тогда
										ПараметрыШтрихкода.Вставить("УголПоворота", ОписаниеШаблона.УголПоворота);
									КонецЕсли;
									
									Рисунок.Картинка = МенеджерОборудованияВызовСервера.ПолучитьКартинкуШтрихкода(ПараметрыШтрихкода);
									
								КонецЕсли;
								
							КонецЕсли;
						КонецЦикла;
						
						Для Инд = 1 По СтрокаТовары[ПечатнаяФорма.ИмяКолонкиКоличество] Цикл // Цикл по количеству экземпляров.
							
							МассивОбластей = Новый Массив;
							МассивОбластей.Добавить(Область);
							
							НомерКолонки = НомерКолонки + 1;
							
							Если ПроверятьВывод Тогда
								
								Если НомерКолонки = 1 Тогда
									Если Не ВременныйТабличныйДокумент.ПроверитьВывод(МассивОбластей) Тогда
										ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
										НомерРяда = 0;
										ВременныйТабличныйДокумент.Очистить();
									КонецЕсли;
								Иначе
									Если Не ВременныйТабличныйДокумент.ПроверитьПрисоединение(МассивОбластей) Тогда
										ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
										НомерРяда    = 0;
										ВременныйТабличныйДокумент.Очистить();
									КонецЕсли;
								КонецЕсли;
								
							КонецЕсли;
							
							Если НомерКолонки = 1 Тогда
								
								НомерРяда = НомерРяда + 1;
								
								ПечатнаяФорма.ТабличныйДокумент.Вывести(Область);
								ВременныйТабличныйДокумент.Вывести(Область);
								
							Иначе
								
								ПечатнаяФорма.ТабличныйДокумент.Присоединить(Область);
								ВременныйТабличныйДокумент.Присоединить(Область);
								
							КонецЕсли;
							
							Если НомерКолонки = ОписаниеШаблона.КоличествоПоГоризонтали И НомерРяда = ОписаниеШаблона.КоличествоПоВертикали Тогда
								
								НомерРяда    = 0;
								НомерКолонки = 0;
								
								ПечатнаяФорма.ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								ВременныйТабличныйДокумент.Очистить();
								
							ИначеЕсли НомерКолонки = ОписаниеШаблона.КоличествоПоГоризонтали Тогда
								
								НомерКолонки = 0;
								
							КонецЕсли;
							
						КонецЦикла; // Цикл по количеству экземпляров.
						
					КонецЕсли;
					
					Если ОписаниеШаблона <> Неопределено 
						И ТипЗнч(ОписаниеШаблона) = Тип("Структура")
						И СтрокаТовары[ПечатнаяФорма.ИмяКолонкиШаблон].ТипШаблона = Перечисления.ТипыШаблонов.ЭтикеткаЦенникПринтераЭтикеток Тогда
						Поля = Новый Массив;
						Для Каждого ТекПоле Из ОписаниеШаблона.ПоляМакета Цикл			
							Если ТекПоле.ТипЗаполнения = "Parameter" Тогда							
								НовоеПоле = Новый Структура;
								НовоеПоле.Вставить("ИмяПоля", ТекПоле.Наименование);							
								Попытка
									Значение = Вычислить("СтрокаТовары." + ТекПоле.Значение);
								Исключение
									Значение = "";
								КонецПопытки;
								Если Значение = "" Тогда
									Попытка
										ИмяКолонки = ДанныеДляПечати.СоответствиеПолейСКДКолонкамТаблицыТоваров.Получить(ТекПоле.Значение);
										Значение = Вычислить("СтрокаТовары." + ИмяКолонки);
									Исключение
										Значение = "";
									КонецПопытки;
								КонецЕсли;
								Если ТипЗнч(Значение) = Тип("ХранилищеЗначения") Тогда								
									Значение = Значение.Получить();								
									Если ТипЗнч(Значение) = Тип("ДвоичныеДанные") Тогда
										Значение = Base64Строка(Значение);
									Иначе
										Значение = Строка(Значение);
									КонецЕсли;								
								ИначеЕсли ТипЗнч(Значение) = Тип("СправочникСсылка.НоменклатураПрисоединенныеФайлы") Тогда
									
									Если Значение.ТипХраненияФайла = ПредопределенноеЗначение("Перечисление.ТипыХраненияФайлов.ВИнформационнойБазе") Тогда
										АдресХранилища = РаботаСФайлами.ДанныеФайла(Значение).СсылкаНаДвоичныеДанныеФайла;
										Значение = ПолучитьИзВременногоХранилища(АдресХранилища);
									КонецЕсли;
									
									Если ТипЗнч(Значение) = Тип("ДвоичныеДанные") Тогда
										Значение = Base64Строка(Значение);
									Иначе
										Значение = Строка(Значение);
									КонецЕсли;
									
								КонецЕсли;							
								Если ЗначениеЗаполнено(Значение) Тогда
									НовоеПоле.Вставить("Значение", Значение);
								Иначе								
									Если ЗначениеЗаполнено(ТекПоле.ЗначениеПоУмолчанию) Тогда						
										НовоеПоле.Вставить("Значение", ТекПоле.ЗначениеПоУмолчанию);
									Иначе
										НовоеПоле.Вставить("Значение", "");
									КонецЕсли;								
								КонецЕсли;
								
								Поля.Добавить(НовоеПоле);
								
							КонецЕсли;
							
						КонецЦикла;
						НоваяЭтикетка = Новый Структура;
						НоваяЭтикетка.Вставить("Количество", СтрокаТовары[ПечатнаяФорма.ИмяКолонкиКоличество]);
						НоваяЭтикетка.Вставить("ЗначенияПолей", Поля);
						ПечатнаяФорма.ТабличныйДокумент.Этикетки.Добавить(НоваяЭтикетка);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла; // Цикл по строкам таблицы товаров.
		КонецЕсли;
	КонецЦикла;
	
	МассивСтрокДляУдаления = Новый Массив;
	Для Каждого ПечатнаяФорма Из КоллекцияПечатныхФорм Цикл
		Если ПечатнаяФорма.ТабличныйДокумент = Неопределено Тогда
			МассивСтрокДляУдаления.Добавить(ПечатнаяФорма);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ПечатнаяФорма Из МассивСтрокДляУдаления Цикл
		КоллекцияПечатныхФорм.Удалить(ПечатнаяФорма);
	КонецЦикла;
	
	Возврат КоллекцияПечатныхФорм;
КонецФункции
