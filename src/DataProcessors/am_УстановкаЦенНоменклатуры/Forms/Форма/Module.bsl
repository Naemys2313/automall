
&НаКлиенте
Процедура ПоПриходнымНакладным(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ИмяФормыВыбораНоменклатуры = "Документ.ПриходнаяНакладная.ФормаВыбора";
	
	ОткрытьФорму(ИмяФормыВыбораНоменклатуры, ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоКатегорииНоменклатуры(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ИмяФормыВыбораНоменклатуры = "Справочник.КатегорииНоменклатуры.ФормаСписка";
	
	ОткрытьФорму(ИмяФормыВыбораНоменклатуры, ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоЭлементамНоменклатуры(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ИмяФормыВыбораНоменклатуры = "Справочник.Номенклатура.ФормаВыбора";
	
	ОткрытьФорму(ИмяФормыВыбораНоменклатуры, ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоГруппамНоменклатуры(Команда)

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыОткрытия.Вставить("МножественныйВыбор", Истина);
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	
	ИмяФормыВыбораНоменклатуры = "Справочник.Номенклатура.ФормаВыбораГруппы";
	
	ОткрытьФорму(ИмяФормыВыбораНоменклатуры, ПараметрыОткрытия, ЭтаФорма, , , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОчистить(Команда)
	
	Объект.Товары.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНоменклатуру(ВыбранноеЗначение)
	Элементы.ТоварыКоличество.Видимость = Ложь;	
	Если ТипЗнч(ВыбранноеЗначение[0]) = Тип("ДокументСсылка.ПриходнаяНакладная") Тогда
		Элементы.ТоварыКоличество.Видимость = Истина;
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	ПриходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
		                      |	ПриходнаяНакладнаяЗапасы.Номенклатура.am_Бренд КАК Бренд,
		                      |	ЕСТЬNULL(am_БрендыДиапазон.От, 0) КАК От,
		                      |	ЕСТЬNULL(am_БрендыДиапазон.До, 9999999) КАК До,
		                      |	ВЫБОР
		                      |		КОГДА am_БрендыДиапазон.Процент ЕСТЬ NULL
		                      |			ТОГДА &am_ПроцентНаценки
		                      |		ИНАЧЕ ВЫБОР
		                      |				КОГДА am_БрендыДиапазон.Процент = 0
		                      |					ТОГДА &am_ПроцентНаценки
		                      |				ИНАЧЕ am_БрендыДиапазон.Процент
		                      |			КОНЕЦ
		                      |	КОНЕЦ КАК Наценка,
		                      |	ПриходнаяНакладнаяЗапасы.Количество КАК Количество
		                      |ПОМЕСТИТЬ Вт_Товары
		                      |ИЗ
		                      |	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.am_Бренды.Диапазон КАК am_БрендыДиапазон
		                      |		ПО ПриходнаяНакладнаяЗапасы.Номенклатура.am_Бренд = am_БрендыДиапазон.Ссылка
		                      |ГДЕ
		                      |	ПриходнаяНакладнаяЗапасы.Ссылка В(&СписокПоступлений)
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	СправочникНоменклатура.Номенклатура КАК Номенклатура,
		                      |	ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) КАК БазоваяЦена,
		                      |	ЕСТЬNULL(ТекущиеЦеныНоменклатуры.Цена, 0) КАК ТекущаяЦена,
		                      |	ВЫРАЗИТЬ(ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) + ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) / 100 * СправочникНоменклатура.Наценка КАК ЧИСЛО(15, 0)) КАК НоваяЦена,
		                      |	ВЫБОР
		                      |		КОГДА НЕ (ВЫРАЗИТЬ(ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) + ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) / 100 * СправочникНоменклатура.Наценка КАК ЧИСЛО(15, 0))) = 0
		                      |			ТОГДА ИСТИНА
		                      |		ИНАЧЕ ЛОЖЬ
		                      |	КОНЕЦ КАК Пометка,
		                      |	СправочникНоменклатура.Количество КАК Количество
		                      |ИЗ
		                      |	Вт_Товары КАК СправочникНоменклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &am_БазовыйВидЦен) КАК БазовыеЦеныНоменклатуры
		                      |		ПО (БазовыеЦеныНоменклатуры.Номенклатура = СправочникНоменклатура.Номенклатура)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &am_ТекущийВидЦен) КАК ТекущиеЦеныНоменклатуры
		                      |		ПО (ТекущиеЦеныНоменклатуры.Номенклатура = СправочникНоменклатура.Номенклатура)
		                      |ГДЕ
		                      |	СправочникНоменклатура.От <= ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0)
		                      |	И СправочникНоменклатура.До > ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0)");
		Запрос.УстановитьПараметр("СписокПоступлений", ВыбранноеЗначение);
		Запрос.УстановитьПараметр("am_БазовыйВидЦен", Объект.am_БазовыйВидЦен);
		Запрос.УстановитьПараметр("am_ТекущийВидЦен", Объект.am_ТекущийВидЦен);
		Запрос.УстановитьПараметр("am_ПроцентНаценки", Объект.am_ПроцентНаценки);
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	ИначеЕсли ТипЗнч(ВыбранноеЗначение[0]) = Тип("СправочникСсылка.КатегорииНоменклатуры") Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	СправочникНоменклатура.Ссылка КАК Номенклатура,
		                      |	СправочникНоменклатура.am_Бренд КАК Бренд,
		                      |	ЕСТЬNULL(am_БрендыДиапазон.От, 0) КАК От,
		                      |	ЕСТЬNULL(am_БрендыДиапазон.До, 9999999) КАК До,
		                      |	ВЫБОР
		                      |		КОГДА am_БрендыДиапазон.Процент ЕСТЬ NULL
		                      |			ТОГДА &am_ПроцентНаценки
		                      |		ИНАЧЕ ВЫБОР
		                      |				КОГДА am_БрендыДиапазон.Процент = 0
		                      |					ТОГДА &am_ПроцентНаценки
		                      |				ИНАЧЕ am_БрендыДиапазон.Процент
		                      |			КОНЕЦ
		                      |	КОНЕЦ КАК Наценка
		                      |ПОМЕСТИТЬ Вт_Товары
		                      |ИЗ
		                      |	Справочник.Номенклатура КАК СправочникНоменклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.am_Бренды.Диапазон КАК am_БрендыДиапазон
		                      |		ПО СправочникНоменклатура.am_Бренд = am_БрендыДиапазон.Ссылка
		                      |ГДЕ
		                      |	СправочникНоменклатура.КатегорияНоменклатуры В(&СписокКатегорийНоменклатуры)
		                      |	И НЕ СправочникНоменклатура.ЭтоГруппа
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	СправочникНоменклатура.Номенклатура КАК Номенклатура,
		                      |	ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) КАК БазоваяЦена,
		                      |	ЕСТЬNULL(ТекущиеЦеныНоменклатуры.Цена, 0) КАК ТекущаяЦена,
		                      |	ВЫРАЗИТЬ(ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) + ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) / 100 * СправочникНоменклатура.Наценка КАК ЧИСЛО(15, 0)) КАК НоваяЦена,
		                      |	ВЫБОР
		                      |		КОГДА НЕ (ВЫРАЗИТЬ(ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) + ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0) / 100 * СправочникНоменклатура.Наценка КАК ЧИСЛО(15, 0))) = 0
		                      |			ТОГДА ИСТИНА
		                      |		ИНАЧЕ ЛОЖЬ
		                      |	КОНЕЦ КАК Пометка
		                      |ИЗ
		                      |	Вт_Товары КАК СправочникНоменклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &am_БазовыйВидЦен) КАК БазовыеЦеныНоменклатуры
		                      |		ПО (БазовыеЦеныНоменклатуры.Номенклатура = СправочникНоменклатура.Номенклатура)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &am_ТекущийВидЦен) КАК ТекущиеЦеныНоменклатуры
		                      |		ПО (ТекущиеЦеныНоменклатуры.Номенклатура = СправочникНоменклатура.Номенклатура)
		                      |ГДЕ
		                      |	СправочникНоменклатура.От <= ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0)
		                      |	И СправочникНоменклатура.До > ЕСТЬNULL(БазовыеЦеныНоменклатуры.Цена, 0)");
		Запрос.УстановитьПараметр("СписокКатегорийНоменклатуры", ВыбранноеЗначение);
		Запрос.УстановитьПараметр("am_БазовыйВидЦен", Объект.am_БазовыйВидЦен);
		Запрос.УстановитьПараметр("am_ТекущийВидЦен", Объект.am_ТекущийВидЦен);
		Запрос.УстановитьПараметр("am_ПроцентНаценки", Объект.am_ПроцентНаценки);
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	Иначе
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	СправочникНоменклатура.Ссылка КАК Номенклатура,
		                      |	СправочникНоменклатура.am_Бренд КАК Бренд
		                      |ПОМЕСТИТЬ ВТ_Номенклатура
		                      |ИЗ
		                      |	Справочник.Номенклатура КАК СправочникНоменклатура
		                      |ГДЕ
		                      |	СправочникНоменклатура.Ссылка В ИЕРАРХИИ(&СписокНоменклатуры)
		                      |	И НЕ СправочникНоменклатура.ЭтоГруппа
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	СправочникНоменклатура.Номенклатура КАК Номенклатура,
		                      |	ЕСТЬNULL(am_БрендыДиапазон.От, 0) КАК От,
		                      |	ЕСТЬNULL(am_БрендыДиапазон.До, 9999999) КАК До,
		                      |	ВЫБОР
		                      |		КОГДА am_БрендыДиапазон.Процент ЕСТЬ NULL
		                      |			ТОГДА &am_ПроцентНаценки
		                      |		ИНАЧЕ ВЫБОР
		                      |				КОГДА am_БрендыДиапазон.Процент = 0
		                      |					ТОГДА &am_ПроцентНаценки
		                      |				ИНАЧЕ am_БрендыДиапазон.Процент
		                      |			КОНЕЦ
		                      |	КОНЕЦ КАК Наценка
		                      |ПОМЕСТИТЬ ВТ_НоменклатураДиапазон
		                      |ИЗ
		                      |	ВТ_Номенклатура КАК СправочникНоменклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.am_Бренды.Диапазон КАК am_БрендыДиапазон
		                      |		ПО СправочникНоменклатура.Бренд = am_БрендыДиапазон.Ссылка
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ПриходнаяНакладнаяЗапасы.Ссылка.Дата КАК Дата,
		                      |	ПриходнаяНакладнаяЗапасы.Номенклатура КАК Номенклатура,
		                      |	ПриходнаяНакладнаяЗапасы.Цена КАК Цена,
		                      |	ПриходнаяНакладнаяЗапасы.Количество КАК Количество
		                      |ПОМЕСТИТЬ ВТ_ВСЕ_Цены
		                      |ИЗ
		                      |	ВТ_Номенклатура КАК ВТ_Номенклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
		                      |		ПО ВТ_Номенклатура.Номенклатура = ПриходнаяНакладнаяЗапасы.Номенклатура
		                      |ГДЕ
		                      |	ПриходнаяНакладнаяЗапасы.Ссылка.Проведен
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
		                      |	ВТ_ВСЕ_Цены.Цена КАК Цена
		                      |ПОМЕСТИТЬ ВТ_БазовыеЦены
		                      |ИЗ
		                      |	(ВЫБРАТЬ
		                      |		МАКСИМУМ(ВТ_ВСЕ_Цены.Дата) КАК Дата,
		                      |		ВТ_ВСЕ_Цены.Номенклатура КАК Номенклатура
		                      |	ИЗ
		                      |		ВТ_ВСЕ_Цены КАК ВТ_ВСЕ_Цены
		                      |	
		                      |	СГРУППИРОВАТЬ ПО
		                      |		ВТ_ВСЕ_Цены.Номенклатура) КАК ВложенныйЗапрос
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВСЕ_Цены КАК ВТ_ВСЕ_Цены
		                      |		ПО ВложенныйЗапрос.Дата = ВТ_ВСЕ_Цены.Дата
		                      |			И ВложенныйЗапрос.Номенклатура = ВТ_ВСЕ_Цены.Номенклатура
		                      |;
		                      |
		                      |////////////////////////////////////////////////////////////////////////////////
		                      |ВЫБРАТЬ
		                      |	ВТ_Номенклатура.Номенклатура КАК Номенклатура,
		                      |	ЕСТЬNULL(ВТ_БазовыеЦены.Цена, 0) КАК БазоваяЦена,
		                      |	ЕСТЬNULL(ТекущиеЦеныНоменклатуры.Цена, 0) КАК ТекущаяЦена,
		                      |	ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_БазовыеЦены.Цена, 0) + ЕСТЬNULL(ВТ_БазовыеЦены.Цена, 0) / 100 * ВТ_Номенклатура.Наценка КАК ЧИСЛО(15, 0)) КАК НоваяЦена,
		                      |	ВЫБОР
		                      |		КОГДА НЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_БазовыеЦены.Цена, 0) + ЕСТЬNULL(ВТ_БазовыеЦены.Цена, 0) / 100 * ВТ_Номенклатура.Наценка КАК ЧИСЛО(15, 0))) = 0
		                      |			ТОГДА ИСТИНА
		                      |		ИНАЧЕ ЛОЖЬ
		                      |	КОНЕЦ КАК Пометка
		                      |ИЗ
		                      |	ВТ_НоменклатураДиапазон КАК ВТ_Номенклатура
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БазовыеЦены КАК ВТ_БазовыеЦены
		                      |		ПО (ВТ_БазовыеЦены.Номенклатура = ВТ_Номенклатура.Номенклатура)
		                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = &am_ТекущийВидЦен) КАК ТекущиеЦеныНоменклатуры
		                      |		ПО (ТекущиеЦеныНоменклатуры.Номенклатура = ВТ_Номенклатура.Номенклатура)");
		Запрос.УстановитьПараметр("СписокНоменклатуры", ВыбранноеЗначение);
		Запрос.УстановитьПараметр("am_ПроцентНаценки", Объект.am_ПроцентНаценки);
		Запрос.УстановитьПараметр("am_БазовыйВидЦен", Объект.am_БазовыйВидЦен);
		Запрос.УстановитьПараметр("am_ТекущийВидЦен", Объект.am_ТекущийВидЦен);
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		Запрос = Новый Запрос();
		Если СтрокаТекущихДанных.НоваяЦена <> 0 Тогда
			Если СтрокаТекущихДанных.БазоваяЦена <> 0 Тогда
				СтрокаТекущихДанных.ДельтаКБазовой = Окр(СтрокаТекущихДанных.БазоваяЦенаДо - СтрокаТекущихДанных.БазоваяЦена, 2);
			КонецЕсли;
			Если СтрокаТекущихДанных.ТекущаяЦена <> 0 Тогда
				СтрокаТекущихДанных.ДельтаКТекущей = Окр(СтрокаТекущихДанных.ТекущаяЦена - СтрокаТекущихДанных.НоваяЦена, 2);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		Если СтрокаТекущихДанных.БазоваяЦена <> 0 Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			               |	ЦеныНоменклатуры.Цена КАК Цена,
			               |	ЦеныНоменклатуры.Период КАК Период
			               |ИЗ
			               |	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
			               |ГДЕ
			               |	ЦеныНоменклатуры.ВидЦен = &ВидЦен
			               |	И ЦеныНоменклатуры.Номенклатура = &Номенклатура
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ЦеныНоменклатуры.Цена,
			               |	ЦеныНоменклатуры.Период
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	ЦеныНоменклатуры.Период УБЫВ";
			
			Запрос.УстановитьПараметр("ВидЦен", Объект.am_БазовыйВидЦен);
			Запрос.УстановитьПараметр("Номенклатура", СтрокаТекущихДанных.Номенклатура);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать();
			
			к = 0;
			Пока Выборка.Следующий() Цикл
				
				Если к = 0 Тогда
					СтрокаТекущихДанных.БазоваяЦена = Выборка.Цена;
				ИначеЕсли к = 1 Тогда
					СтрокаТекущихДанных.БазоваяЦенаДо = Выборка.Цена;
					Прервать;
				КонецЕсли;
				
				к = к + 1;
			КонецЦикла;
			
		КонецЕсли;
		
		СтрокаТекущихДанных.ДельтаКБазовой = Окр(СтрокаТекущихДанных.БазоваяЦена - СтрокаТекущихДанных.БазоваяЦенаДо, 2);
		СтрокаТекущихДанных.ДельтаКТекущей = Окр(СтрокаТекущихДанных.НоваяЦена - СтрокаТекущихДанных.ТекущаяЦена, 2);
		
	КонецЦикла;
	
	ДокументыПрихода.Очистить();
	Для Каждого Строка Из ВыбранноеЗначение Цикл
		
		НоваяСтрока = ДокументыПрихода.Добавить();
		НоваяСтрока.Документ = Строка.Ссылка;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Если ВыбранноеЗначение.Количество() > 0 Тогда
			ДобавитьНоменклатуру(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ РегистрыСведений.am_ХранилищеНастроек.ПолучитьБлокЦены() Тогда
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНетДоступа;
		Возврат;
		
	КонецЕсли;
	
	Объект.am_БазовыйВидЦен = РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидЦенЗакуп();
	Объект.am_ТекущийВидЦен = РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидЦенРозница();
	
	Объект.am_ПроцентНаценки = РегистрыСведений.am_ХранилищеНастроек.ПолучитьПроцентНаценкиВБрендахПоУмолчанию();
	
	Объект.am_ДатаНовыхЦен = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПроцентНаценки(Номенклатура,БазоваяЦена)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("БазоваяЦена",БазоваяЦена);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(am_БрендыДиапазон.От, 0) КАК От,
	               |	ЕСТЬNULL(am_БрендыДиапазон.До, 999999) КАК До,
	               |	ЕСТЬNULL(am_БрендыДиапазон.Процент, 0) КАК Наценка
	               |ПОМЕСТИТЬ ВТ_Диапазон
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.am_Бренды.Диапазон КАК am_БрендыДиапазон
	               |		ПО Номенклатура.am_Бренд = am_БрендыДиапазон.Ссылка
	               |ГДЕ
	               |	Номенклатура.Ссылка = &Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Диапазон.Наценка КАК Наценка
	               |ИЗ
	               |	ВТ_Диапазон КАК ВТ_Диапазон
	               |ГДЕ
	               |	ВТ_Диапазон.От <= &БазоваяЦена
	               |	И ВТ_Диапазон.До >= &БазоваяЦена";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Наценка;
	Иначе	
		Возврат Объект.am_ПроцентНаценки;
	КонецЕсли;
КонецФункции


&НаСервере
Процедура УстановитьЦеныНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		Если СтрокаТекущихДанных.Пометка Тогда
			ЗаписьРегистра = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
			ЗаписьРегистра.Период = Объект.am_ДатаНовыхЦен;
			ЗаписьРегистра.ВидЦен = Объект.am_ТекущийВидЦен;
			ЗаписьРегистра.Номенклатура = СтрокаТекущихДанных.Номенклатура;
			ЗаписьРегистра.Характеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
			ЗаписьРегистра.Цена = СтрокаТекущихДанных.НоваяЦена;
			ЗаписьРегистра.Актуальность = Истина;
			ЗаписьРегистра.ЕдиницаИзмерения = СтрокаТекущихДанных.Номенклатура.ЕдиницаИзмерения;
			ЗаписьРегистра.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из ДокументыПрихода Цикл
		Док = Строка.Документ.ПолучитьОбъект();
		Док.ОбменДанными.Загрузка = Истина;
		Док.am_ЦеныУстановлены = Истина;
		Док.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦены(Команда)
	
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		Если СтрокаТекущихДанных.Пометка И СтрокаТекущихДанных.НоваяЦена = 0 Тогда
			СтрокаТекущихДанных.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьЦеныНаСервере();
	
	ПоказатьОповещениеПользователя("Цены установлены");
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоваяЦенаПриИзменении(Элемент)
	
	СтрокаТекущихДанных = Элементы.Товары.ТекущиеДанные;
	Если СтрокаТекущихДанных <> Неопределено Тогда
		
		ПеремПроцентНаценки = ПолучитьПроцентНаценки(СтрокаТекущихДанных.Номенклатура, СтрокаТекущихДанных.БазоваяЦена);
		
		//цена не может быть меньше закупочной с наценкой
		Если СтрокаТекущихДанных.НоваяЦена < Окр(СтрокаТекущихДанных.БазоваяЦена + СтрокаТекущихДанных.БазоваяЦена / 100 * ПеремПроцентНаценки, 0) Тогда
			СтрокаТекущихДанных.НоваяЦена = Окр(СтрокаТекущихДанных.БазоваяЦена + СтрокаТекущихДанных.БазоваяЦена / 100 * ПеремПроцентНаценки, 0);
			ТекстСообщения = "Установка новой цены ниже закупочной с наценкой " + ПеремПроцентНаценки + "% не допустимо!";
			Индекс = Объект.Товары.Индекс(СтрокаТекущихДанных);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "Объект.Товары["+Индекс+"].НоваяЦена");
		КонецЕсли;
			
		СтрокаТекущихДанных.Пометка = СтрокаТекущихДанных.НоваяЦена <> 0;
		
		Если СтрокаТекущихДанных.НоваяЦена <> 0 И СтрокаТекущихДанных.БазоваяЦена <> 0 Тогда
			СтрокаТекущихДанных.ДельтаКБазовой = Окр(СтрокаТекущихДанных.БазоваяЦена - СтрокаТекущихДанных.БазоваяЦенаДо, 2);
		Иначе
			СтрокаТекущихДанных.ДельтаКБазовой = 0;
		КонецЕсли;
		
		Если СтрокаТекущихДанных.НоваяЦена <> 0 И СтрокаТекущихДанных.ТекущаяЦена <> 0 Тогда
			СтрокаТекущихДанных.ДельтаКТекущей = Окр(СтрокаТекущихДанных.НоваяЦена - СтрокаТекущихДанных.ТекущаяЦена, 2);
		Иначе
			СтрокаТекущихДанных.ДельтаКТекущей = 0;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		Если СтрокаТекущихДанных.НоваяЦена <> 0 Тогда
			СтрокаТекущихДанных.Пометка = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		СтрокаТекущихДанных.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТекущийВидЦенПриИзменении(Элемент)
	
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		
		ПеремПроцентНаценки = ПолучитьПроцентНаценки(СтрокаТекущихДанных.Номенклатура,СтрокаТекущихДанных.БазоваяЦена);

		Если СтрокаТекущихДанных.БазоваяЦена <> 0 И СтрокаТекущихДанных.ДельтаКБазовой < ПеремПроцентНаценки Тогда
			СтрокаТекущихДанных.НоваяЦена = Окр(СтрокаТекущихДанных.БазоваяЦена + СтрокаТекущихДанных.БазоваяЦена / 100 * ПеремПроцентНаценки, 0);
			Если СтрокаТекущихДанных.НоваяЦена <> 0 И СтрокаТекущихДанных.БазоваяЦена <> 0 Тогда
				СтрокаТекущихДанных.ДельтаКБазовой = Окр(СтрокаТекущихДанных.БазоваяЦена - СтрокаТекущихДанных.БазоваяЦенаДо, 2);
			Иначе
				СтрокаТекущихДанных.ДельтаКБазовой = 0;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентНаценкиРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	ПроцентНаценкиПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПроцентНаценкиПриИзмененииНаСервере()
	Для Каждого СтрокаТекущихДанных Из Объект.Товары Цикл
		
		ПеремПроцентНаценки = ПолучитьПроцентНаценки(СтрокаТекущихДанных.Номенклатура,СтрокаТекущихДанных.БазоваяЦена);

		Если СтрокаТекущихДанных.БазоваяЦена <> 0 Тогда
			СтрокаТекущихДанных.НоваяЦена = Окр(СтрокаТекущихДанных.БазоваяЦена + СтрокаТекущихДанных.БазоваяЦена / 100 * ПеремПроцентНаценки, 0);
			Если СтрокаТекущихДанных.НоваяЦена <> 0 И СтрокаТекущихДанных.БазоваяЦена <> 0 Тогда
				СтрокаТекущихДанных.ДельтаКБазовой = Окр(СтрокаТекущихДанных.БазоваяЦена - СтрокаТекущихДанных.БазоваяЦенаДо, 2);
			Иначе
				СтрокаТекущихДанных.ДельтаКБазовой = 0;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентНаценкиПриИзменении(Элемент)
	ПроцентНаценкиПриИзмененииНаСервере();
КонецПроцедуры


