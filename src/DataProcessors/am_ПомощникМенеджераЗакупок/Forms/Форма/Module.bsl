
&НаСервере
Процедура ОбновитьИнформациюНаСервере()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	                      |	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	                      |	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	                      |ПОМЕСТИТЬ втЦеныНоменклатурыСрезПоследних
	                      |ИЗ
	                      |	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, ВидЦен = ЗНАЧЕНИЕ(Справочник.ВидыЦен.Учетная)) КАК ЦеныНоменклатурыСрезПоследних
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ЗапасыОстатки.Номенклатура КАК Номенклатура,
	                      |	ЗапасыОстатки.КоличествоОстаток КАК ТекущийОстаток,
	                      |	0 КАК ВПути
	                      |ПОМЕСТИТЬ втОстатки
	                      |ИЗ
	                      |	РегистрНакопления.Запасы.Остатки(, Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)) КАК ЗапасыОстатки
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ЗаказыПоставщикамОстатки.Номенклатура,
	                      |	0,
	                      |	ЗаказыПоставщикамОстатки.КоличествоОстаток
	                      |ИЗ
	                      |	РегистрНакопления.ЗаказыПоставщикам.Остатки(, Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Запас)) КАК ЗаказыПоставщикамОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	втОстатки.Номенклатура КАК Номенклатура,
	                      |	СУММА(втОстатки.ТекущийОстаток) КАК ТекущийОстаток,
	                      |	СУММА(втОстатки.ВПути) КАК ВПути
	                      |ПОМЕСТИТЬ втОстаткиОбщие
	                      |ИЗ
	                      |	втОстатки КАК втОстатки
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	втОстатки.Номенклатура
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	втОстаткиОбщие.Номенклатура КАК Номенклатура,
	                      |	втОстаткиОбщие.ТекущийОстаток КАК ТекущийОстаток,
	                      |	втОстаткиОбщие.ВПути КАК ВПути
	                      |ПОМЕСТИТЬ втОстаткиОбщиеСЦенами
	                      |ИЗ
	                      |	втОстаткиОбщие КАК втОстаткиОбщие
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПродажиОбороты.Номенклатура КАК Номенклатура,
	                      |	ПродажиОбороты.КоличествоОборот КАК Продано,
	                      |	ПродажиОбороты.Номенклатура.ВерхняяГраницаОстатков КАК МаксимальныйОстаток,
	                      |	ПродажиОбороты.Номенклатура.Поставщик КАК Поставщик,
	                      |	ЕСТЬNULL(втОстаткиОбщиеСЦенами.ТекущийОстаток, 0) КАК ТекущийОстаток,
	                      |	ЕСТЬNULL(втОстаткиОбщиеСЦенами.ВПути, 0) КАК ВПути,
	                      |	ЕСТЬNULL(ЦеныПоНоменклатуре.Цена, 0) КАК Цена
	                      |ИЗ
	                      |	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаОкончания, Период, ) КАК ПродажиОбороты
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ втОстаткиОбщиеСЦенами КАК втОстаткиОбщиеСЦенами
	                      |		ПО (втОстаткиОбщиеСЦенами.Номенклатура = ПродажиОбороты.Номенклатура)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ втЦеныНоменклатурыСрезПоследних КАК ЦеныПоНоменклатуре
	                      |		ПО (ЦеныПоНоменклатуре.Номенклатура = ПродажиОбороты.Номенклатура)");
	Запрос.УстановитьПараметр("ДатаНачала", ПериодПродаж.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПериодПродаж.ДатаОкончания);
	Объект.НоменклатураКЗаказу.Загрузить(Запрос.Выполнить().Выгрузить());
	       
КонецПроцедуры

&НаСервере
Функция ПолучитьДополнительнуюИнформациюПоНоменклатуре(НоменклатураСсылка)
	
	СтруктураИнформации = Новый Структура;
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПриходнаяНакладнаяЗапасы.Цена КАК Цена,
	                      |	ПриходнаяНакладнаяЗапасы.Ссылка.Контрагент КАК Контрагент
	                      |ИЗ
	                      |	Документ.ПриходнаяНакладная.Запасы КАК ПриходнаяНакладнаяЗапасы
	                      |ГДЕ
	                      |	ПриходнаяНакладнаяЗапасы.Номенклатура = &Номенклатура
	                      |	И ПриходнаяНакладнаяЗапасы.Ссылка.Проведен
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПриходнаяНакладнаяЗапасы.Ссылка.Дата УБЫВ");
	Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		СтруктураИнформации.Вставить("Поставщик", Результат.Контрагент);
		СтруктураИнформации.Вставить("Цена", Результат.Цена);
	Иначе
		СтруктураИнформации.Вставить("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
		СтруктураИнформации.Вставить("Цена", 0);
	КонецЕсли;
	
	Возврат СтруктураИнформации;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьИнформацию(Команда)
	ОбновитьИнформациюНаСервере();
	
	ВсегоОпераций = Объект.НоменклатураКЗаказу.Количество();
	ТекущаяОперация = 0;
	
	Для Каждого Стр Из Объект.НоменклатураКЗаказу Цикл
		
		Если Стр.МаксимальныйОстаток > (Макс(Стр.ТекущийОстаток, 0) + Стр.ВПути) Тогда
			Стр.КЗаказу = Стр.МаксимальныйОстаток - Макс(Стр.ТекущийОстаток, 0) - Стр.ВПути;
			Стр.Выбор = Истина;
		КонецЕсли;

		ТекущаяОперация = ТекущаяОперация + 1;
		Состояние(Стр.Номенклатура, ТекущаяОперация / ВсегоОпераций * 100);
		//Если НЕ ЗначениеЗаполнено(Стр.Поставщик) ИЛИ НЕ ЗначениеЗаполнено(Стр.Цена) Тогда
			СтруктураДополнительныхДанных = ПолучитьДополнительнуюИнформациюПоНоменклатуре(Стр.Номенклатура);
			Если ЗначениеЗаполнено(СтруктураДополнительныхДанных.Поставщик) Тогда
				Стр.Поставщик = СтруктураДополнительныхДанных.Поставщик;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтруктураДополнительныхДанных.Цена) Тогда
				Стр.Цена = СтруктураДополнительныхДанных.Цена;
			КонецЕсли;
		//КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	
	Для Каждого СтрокаНоменклатуры Из Объект.НоменклатураКЗаказу Цикл
		СтрокаНоменклатуры.Выбор = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыбор(Команда)
	
	Для Каждого СтрокаНоменклатуры Из Объект.НоменклатураКЗаказу Цикл
		СтрокаНоменклатуры.Выбор = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураКЗаказуКЗаказуПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.НоменклатураКЗаказу.ТекущиеДанные;
	СтрокаТабличнойЧасти.Выбор = НЕ СтрокаТабличнойЧасти.КЗаказу = 0;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаказыПоставщикамНаСервере()
	
	ЗаказныеПозиции = Объект.НоменклатураКЗаказу.Выгрузить();
	Для Индекс = -ЗаказныеПозиции.Количество() + 1 По 0 Цикл
		Если НЕ ЗаказныеПозиции[-Индекс].Выбор Тогда
			ЗаказныеПозиции.Удалить(-Индекс);
		КонецЕсли;
	КонецЦикла;
	
	ПоставщикиЗаказныхПозиций = ЗаказныеПозиции.Скопировать();
	ПоставщикиЗаказныхПозиций.Свернуть("Поставщик");
	
	СтруктураНовогоДокумента = Новый Структура;
	СтруктураНовогоДокумента.Вставить("Организация", Справочники.Организации.ОрганизацияПоУмолчанию());
	СтруктураНовогоДокумента.Вставить("СтруктурнаяЕдиницаРезерв", Справочники.СтруктурныеЕдиницы.ОсновнойСклад);
	СтруктураНовогоДокумента.Вставить("СтруктурнаяЕдиница", Справочники.СтруктурныеЕдиницы.ОсновноеПодразделение);
	СтруктураНовогоДокумента.Вставить("ВалютаДокумента", Константы.ВалютаУчета.Получить());
	СтруктураНовогоДокумента.Вставить("СостояниеЗаказа", Справочники.СостоянияЗаказовПоставщикам.НайтиПоНаименованию("В работе"));
	СтруктураНовогоДокумента.Вставить("Автор", ПараметрыСеанса.ТекущийПользователь);
	СтруктураНовогоДокумента.Вставить("БанковскийСчет", Справочники.БанковскиеСчета.БанковскийСчетСубъекта(СтруктураНовогоДокумента.Организация));
	СтруктураНовогоДокумента.Вставить("ВидОперации", Перечисления.ВидыОперацийЗаказПоставщику.ЗаказНаЗакупку);
	СтруктураНовогоДокумента.Вставить("ДатаПоступления", ТекущаяДата() + 86400*7);
	СтруктураНовогоДокумента.Вставить("Касса", Справочники.Кассы.ПолучитьКассуПоУмолчанию(СтруктураНовогоДокумента.Организация));
	СтруктураНовогоДокумента.Вставить("Комментарий", "Документ создан из помощника менеджера закупок");
	СтруктураНовогоДокумента.Вставить("Кратность", 1);
	СтруктураНовогоДокумента.Вставить("Курс", 1);
	СтруктураНовогоДокумента.Вставить("НалогообложениеНДС", УправлениеНебольшойФирмойСервер.НалогообложениеНДС(СтруктураНовогоДокумента.Организация,, ТекущаяДата()));
	СтруктураНовогоДокумента.Вставить("НДСВключатьВСтоимость", Истина);
	//СтруктураНовогоДокумента.Вставить("Ответственный", Справочники.Пользователи.);
	СтруктураНовогоДокумента.Вставить("ПоложениеДатыПоступления", Перечисления.ПоложениеРеквизитаНаФорме.ВШапке);
	СтруктураНовогоДокумента.Вставить("СуммаВключаетНДС", Истина);
	СтруктураНовогоДокумента.Вставить("ХозяйственнаяОперация", Справочники.ХозяйственныеОперации.ЗаказНаЗакупку);
	Если СтруктураНовогоДокумента.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ОблагаетсяНДС Тогда
		СтруктураНовогоДокумента.Вставить("СтавкаНДСПоУмолчанию", Справочники.СтавкиНДС.НайтиПоНаименованию("20%", Истина));
	Иначе
		СтруктураНовогоДокумента.Вставить("СтавкаНДСПоУмолчанию", УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСБезНДС());
	КонецЕсли;
	
	Для Каждого СтрокаПоставщика Из ПоставщикиЗаказныхПозиций Цикл
		ЗаказПостащику = Документы.ЗаказПоставщику.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(ЗаказПостащику, СтруктураНовогоДокумента);
		ЗаказПостащику.Дата = ТекущаяДата();
		ЗаказПостащику.Контрагент = СтрокаПоставщика.Поставщик;
		ЗаказПостащику.Договор = Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(СтрокаПоставщика.Поставщик);
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Поставщик", СтрокаПоставщика.Поставщик);
		
		СтрокиТоваров = ЗаказныеПозиции.НайтиСтроки(ПараметрыОтбора);
		
		Для Каждого СтрокаТовара Из СтрокиТоваров Цикл
			СтрокаТабличнойЧасти = ЗаказПостащику.Запасы.Добавить();
			СтрокаТабличнойЧасти.Номенклатура = СтрокаТовара.Номенклатура;
			СтрокаТабличнойЧасти.Количество = СтрокаТовара.КЗаказу;
			СтрокаТабличнойЧасти.Цена = СтрокаТовара.Цена;
			СтрокаТабличнойЧасти.Сумма = СтрокаТовара.КЗаказу * СтрокаТовара.Цена;
			СтрокаТабличнойЧасти.ЕдиницаИзмерения = СтрокаТовара.Номенклатура.ЕдиницаИзмерения;
			СтрокаТабличнойЧасти.СтавкаНДС = СтруктураНовогоДокумента.СтавкаНДСПоУмолчанию;
			СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(СтрокаТабличнойЧасти.СтавкаНДС);
			СтрокаТабличнойЧасти.СуммаНДС = ?(ЗаказПостащику.СуммаВключаетНДС, 
											  СтрокаТабличнойЧасти.Сумма - (СтрокаТабличнойЧасти.Сумма) / ((СтавкаНДС + 100) / 100),
											  СтрокаТабличнойЧасти.Сумма * СтавкаНДС / 100);
			СтрокаТабличнойЧасти.Всего = СтрокаТабличнойЧасти.Сумма + ?(ЗаказПостащику.СуммаВключаетНДС, 0, СтрокаТабличнойЧасти.СуммаНДС);
		КонецЦикла;	
		ЗаказПостащику.СуммаДокумента = ЗаказПостащику.Запасы.Итог("Всего");
		ЗаказПостащику.Записать(РежимЗаписиДокумента.Запись);
		СтрокаЗаказа = Объект.СписокЗаказов.Добавить();
		СтрокаЗаказа.ЗаказПоставщикуСсылка = ЗаказПостащику.Ссылка;
		СтрокаЗаказа.СуммаДокумента = ЗаказПостащику.СуммаДокумента;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция ПолучитьСписокЗаказовКакСтроку()
	Возврат ЗначениеВСтрокуВнутр(Объект.СписокЗаказов.Выгрузить());
КонецФункции

&НаКлиенте
Процедура СформироватьЗаказыПоставщикам(Команда)
	
	ЕстьОшибки = Ложь;
	Для Каждого СтрокаТовара Из Объект.НоменклатураКЗаказу Цикл
		Если СтрокаТовара.Выбор Тогда
			Если СтрокаТовара.КЗаказу = 0 Тогда
				Сообщить("В строке №" + Формат(СтрокаТовара.НомерСтроки, "ЧН=; ЧГ=") + " не указано количество К заказу!");
				ЕстьОшибки = Истина;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТовара.Поставщик) Тогда
				Сообщить("В строке №" + Формат(СтрокаТовара.НомерСтроки, "ЧН=; ЧГ=") + " не указан Поставщик!");
				ЕстьОшибки = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	СформироватьЗаказыПоставщикамНаСервере();
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СписокЗаказовСтрока", ПолучитьСписокЗаказовКакСтроку());
	ОткрытьФорму("Обработка.am_ПомощникМенеджераЗакупок.Форма.ФормаЗаказов",ПараметрыОткрытия,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокСформированныхЗаказов(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("СписокЗаказовСтрока", ПолучитьСписокЗаказовКакСтроку());
	ОткрытьФорму("Обработка.am_ПомощникМенеджераЗакупок.Форма.ФормаЗаказов",ПараметрыОткрытия,ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры
