
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура am_КонтрагентАвтоПодборВместо(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	am_МастерКлиентКлиент.АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура am_КонтрагентПриИзмененииПосле(Элемент)
	
	Объект.am_Автомобиль = am_МастерКлиентВызовСервера.ПодборАвто(Объект.Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура am_ПослеЗаписиПосле(ПараметрыЗаписи)
	
	am_ЗаполнитьПолеПоставщикНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура am_ЗапасыЦенаПриИзмененииПеред(Элемент)
	
	am_ОбщийМодульКлиент.ПроверимЦеныНаПризнакНижеЗакупочных(Элементы.Запасы.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура am_ПриОткрытииПосле(Отказ)
	
	ЗаполнитьЗначенияРезервовИОстатокНоменклатурыВТабличнойЧастиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура am_ПриСозданииНаСервереПосле1(Отказ, СтандартнаяОбработка)
	
	Элементы.am_АвтомобильИнформация.Видимость = РегистрыСведений.am_ХранилищеНастроек.ПолучитьРазмещениеАвтоВЗП();
	
	//Элементы.ЗапасыНоменклатураam_Бренд.Видимость	 			= РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидимостьТЧЗаказаПокупателяПоказатьБренд();
	//Элементы.ЗапасыНоменклатураКатегорияНоменклатуры.Видимость 	= РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидимостьТЧЗаказаПокупателяПоказатьКатегории();
	//Элементы.ЗапасыПоставщик.Видимость 							= РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидимостьТЧЗаказаПокупателяПоказатьПоставщика();
	//Элементы.ЗапасыНоменклатураАртикул.Видимость 				= РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидимостьТЧЗаказаПокупателяПоказатьАртикул();
	
	am_ЗаполнитьПолеПоставщикНаСервере();
	
КонецПроцедуры

&НаКлиенте
&Перед("РассчитатьСуммуВСтрокеТабличнойЧасти")
Процедура Перед_РассчитатьСуммуВСтрокеТабличнойЧасти(ИмяТабличнойЧасти = "Запасы", СтрокаТабличнойЧасти = Неопределено, ПараметрыРасчета = Неопределено)
	
	Если ПараметрыРасчета=Неопределено Тогда
		ПараметрыРасчета = Новый Структура("СброситьФлагСкидкиРассчитаны,РассчитатьМинимальнуюЦену,ЗаказПокупателя",Истина,Истина,Истина);
	Иначе	
		ПараметрыРасчета.Вставить("РассчитатьМинимальнуюЦену",Истина);
		ПараметрыРасчета.Вставить("ЗаказПокупателя",Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииБ

&НаСервере
Процедура am_ЗаполнитьПолеПоставщикНаСервере()
	
	Если НЕ РегистрыСведений.am_ХранилищеНастроек.ПолучитьВидимостьТЧЗаказаПокупателяПоказатьПоставщика() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.Запасы Цикл
		Строка.am_Поставщик = НайдёмВЗаказах(Строка.Номенклатура);	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция НайдёмВЗаказах(Номенклатура)
	
	Текст = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказПоставщикуЗапасы.Ссылка.Контрагент КАК Контрагент,
	               |	ЗаказПоставщикуЗапасы.Ссылка.Дата КАК Дата
	               |ИЗ
	               |	Документ.ЗаказПоставщику.Запасы КАК ЗаказПоставщикуЗапасы
	               |ГДЕ
	               |	ЗаказПоставщикуЗапасы.Ссылка.Проведен
	               |	И ЗаказПоставщикуЗапасы.Номенклатура = &Номенклатура
	               |	И ЗаказПоставщикуЗапасы.Ссылка.ЗаказПокупателя = &Ссылка";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Текст = "" + Текст + Выборка.Контрагент + ?(Выборка.Количество() = 1, "", ", ");
	КонецЦикла;
	
	Возврат Текст
	
КонецФункции



#КонецОбласти



