

Процедура am_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	РазместитьДинамическиеЭлементы();
	
КонецПроцедуры

#Область Работа_с_динамическими_формами

&НаСервере
Процедура РазместитьДинамическиеЭлементы()
	
	Поле = ЭтаФорма.Элементы.Добавить("НовыйОбъектФормы_" + 1, Тип("ПолеФормы"), Элементы.ГруппаДополнительныеРеквизиты);
	Поле.Вид 					= ВидПоляФормы.ПолеФлажка;
	Поле.ВидФлажка              = ВидФлажка.Флажок;
	Поле.ПутьКДанным 			= "Объект.am_ЦеныУстановлены";
	
	ИзменитьВидимостьЗагрузкиExcel();
	

КонецПроцедуры

&НаКлиенте
Процедура am_ЗагрузитьEXCELПосле(Команда)
	Поставщик = "";
	
	// Проверка контрагента 
	// Поставщик ищется для выбора обработки
	Если Объект.Контрагент = НайтиПоставщика("Шите-МПлюс") Тогда
		Поставщик = "Счет фактура";
	ИначеЕсли Объект.Контрагент = НайтиПоставщика("Гринлайт") Тогда
		Поставщик = "Реализация товаров и услуг";
	ИначеЕсли Объект.Контрагент = НайтиПоставщика("М-Авто") Тогда
		Поставщик = "Универсальный предаточный документ";
	ИначеЕсли Объект.Контрагент = НайтиПоставщика("Берк") Тогда
		Поставщик = "Excel";
	Иначе 
		ПоказатьПредупреждение(,"Для данного поставщика не определен импорт", 10);
		Возврат;
	КонецЕсли;
	
	
	
	ВыборEXCEL = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ВыборEXCEL.Заголовок = "Выберите файл " + Поставщик;
	ВыборEXCEL.Фильтр = "Excel файлы(*.xls)|*.xls";
	
	Если ВыборEXCEL.Выбрать() Тогда		
		ПутьКФайлу = ВыборEXCEL.ПолноеИмяФайла;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПутьКФайлу) Тогда
		Возврат;
	КонецЕсли;
	
	//Передаетя поставщик для выбора обработки
	СписокЗначений = ПолучитьExcelВСписокЗначений(ПутьКФайлу, Поставщик);
	
	Если СписокЗначений = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуТоваров(СписокЗначений);	
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьExcelВСписокЗначений(ПутьКФайлу, Поставщик)	
	Попытка
	
		Excel = Новый COMОбъект("Excel.Application");
	
		Excel.WorkBooks.Open(ПутьКФайлу);
		Состояние("Обработка файла Microsoft Excel...");	
	
	Исключение
		Сообщить("Ошибка при открытии файла");
	    Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	Попытка
	
		Excel.Sheets(1).Select();	
	
	Исключение
		Excel.ActiveWorkbook.Close();
		Excel = Неопределено;
		Сообщить("Ошибка при выборе листа");
		Сообщить(ОписаниеОшибки());
		Возврат Excel;
	КонецПопытки; 
	
	
	Версия = Лев(Excel.Version, Найти(Excel.Version, ".") - 1);
	Если Версия = "8" ТОгда
		ФайлСтрок = Excel.Cell.CurentRegion.Rows.Count;
		ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13);
	Иначе
		ФайлСтрок = Excel.Cells(1, 1).SpecialCells(11).Row;
		ФайлКолонок = Excel.Cells(1, 1).SpecialCells(11).Column;
	КонецЕсли;
	
	// ПолучитьСписокЗначенийДляТаблицы1 - счет фактура (ШАТЕ)
	// ПолучитьСписокЗначенийДляТаблицы2 - реализация товаров, универсальный предаточный документ (гринлайн, м-авто)
	Если Поставщик = "Счет фактура" Тогда
		СписокЗначений = ПолучитьСписокЗначенийДляТаблицы1(Excel, ФайлСтрок, ФайлКолонок);
	ИначеЕсли Поставщик = "Реализация товаров и услуг" Тогда
		СписокЗначений = ПолучитьСписокЗначенийДляТаблицы3(Excel, ФайлСтрок, ФайлКолонок);
	ИначеЕсли Поставщик = "Универсальный предаточный документ" Тогда
		СписокЗначений = ПолучитьСписокЗначенийДляТаблицы2(Excel, ФайлСтрок, ФайлКолонок);
	ИначеЕсли Поставщик = "Excel" Тогда
		СписокЗначений = ПолучитьСписокЗначенийДляТаблицы4(Excel, ФайлСтрок, ФайлКолонок);
	Иначе
		СписокЗначений = Неопределено;
	КонецЕсли;
	
	Excel.DisplayAlerts = 0;
	Excel.Quit();
	Excel.DisplayAlerts = 1;
	
	Возврат СписокЗначений;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуТоваров(СписокЗначений)
	ОсновнойСклад = ПолучитьОсновнойСклад();
	
	Объект.СтруктурнаяЕдиница = ОсновнойСклад;
	
	КоличествоЗначений = СписокЗначений.Количество();
	
	Сч = 0;
	Для Каждого СтрокаЗначения Из СписокЗначений Цикл
		Наименование = СтрокаЗначения["Наименование"];
		Артикул = СтрокаЗначения["Артикул"];
		ЕдИзмерения = СтрокаЗначения["Единица измерения"];
		Количество = СокрЛП(СтрокаЗначения["Количество"]);
		Цена = СокрЛП(СтрокаЗначения["Цена"]);
		СтавкаНДС = СтрокаЗначения["Ставка НДС"];
		
		Сч = Сч + 1;
		Если НЕ ЗначениеЗаполнено(Наименование) Тогда
			Продолжить;
		КонецЕсли;
		
		Состояние("Заполняется таблица "+ Строка(Формат(?(КоличествоЗначений=0,0,((100*Сч)/КоличествоЗначений)),"ЧЦ=3; ЧДЦ=0"))+" %");
		
		Номенклатура = НайтиНоменклатуру(Наименование, Артикул, ЕдИзмерения);
		НДС = НайтиНДС(СтавкаНДС);
		
		Товар = Объект.Запасы.Добавить();		
		Товар.Номенклатура = Номенклатура;
		
		Элементы.Запасы.ТекущаяСтрока = Товар.ПолучитьИдентификатор();
		Элементы.Запасы.Обновить();
		
		
		ЗапасыНоменклатураПриИзменении(ТекущийЭлемент);
		ТекТовар = Элементы.Запасы.ТекущиеДанные;
		
		ТекТовар.Количество = Количество;
		ТекТовар.Цена = Цена;
		ТекТовар.СтавкаНДС = НДС;
		ТекТовар.СтруктурнаяЕдиница = ОсновнойСклад;
		ТекТовар.ЕдиницаИзмерения = ПолучитьЕдиницуИзмеренияИзНоменклатуры(Номенклатура);
		
		РассчитатьСуммуВСтрокеТабличнойЧасти(ИмяТЧЗапасы(), Товар);	
		
		ЗаполнитьШтрихкод(ПолучитьАртикулБезСимволов(Артикул), Номенклатура);
	КонецЦикла;	
	
	Элементы.Запасы.Обновить();
КонецПроцедуры

&НаСервере
Функция ПолучитьЕдиницуИзмеренияИзНоменклатуры(Номенклатура)
	Возврат Номенклатура.ЕдиницаИзмерения;
КонецФункции

&НаСервере
Функция НайтиНоменклатуру(Наименование, Артикул, ЕдИзмерения)
	АртикулБезСимволов = ПолучитьАртикулБезСимволов(Артикул);
	
	
	Если НЕ ЗначениеЗаполнено(Артикул) Тогда
		Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(Наименование);	
		Если ЗначениеЗаполнено(Номенклатура) ТОгда
			Возврат Номенклатура.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", Артикул);	
	Если ЗначениеЗаполнено(АртикулБезСимволов) И ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Номенклатура.Ссылка;	
	КонецЕсли;
	
	Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("Артикул", АртикулБезСимволов);
	Если ЗначениеЗаполнено(АртикулБезСимволов) И ЗначениеЗаполнено(Номенклатура) Тогда
		Возврат Номенклатура.Ссылка;
	КонецЕсли;
	
	Номенклатура = Справочники.Номенклатура.СоздатьЭлемент();
	Номенклатура.Наименование = Наименование;
	Номенклатура.НаименованиеПолное = Наименование;
	Номенклатура.Артикул = АртикулБезСимволов;
	Номенклатура.КатегорияНоменклатуры = Справочники.КатегорииНоменклатуры.НайтиПоНаименованию("<Без Категории>").Ссылка;
	Номенклатура.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Запас;
	Номенклатура.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.НайтиПоНаименованию(ЕдИзмерения).Ссылка;
	Номенклатура.СчетУчетаЗапасов = ПланыСчетов.Управленческий.НайтиПоНаименованию("Сырье и материалы");
	Номенклатура.СчетУчетаЗатрат = ПланыСчетов.Управленческий.НайтиПоНаименованию("Установка программы");
	Номенклатура.Комментарий = Наименование;
	Номенклатура.Записать();
	
	ЗаполнитьШтрихкод(АртикулБезСимволов, Номенклатура);
	
	Возврат Номенклатура.Ссылка;
КонецФункции

&НаСервере
Процедура ЗаполнитьШтрихкод(Артикул, Номенклатура)
	АртикулБезСимволов = ПолучитьАртикулБезСимволов(Артикул);
	
	Если АртикулБезСимволов = "" Тогда
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ШтрихкодыНоменклатуры.Штрихкод КАК Штрихкод
	               |ИЗ
	               |	РегистрСведений.ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	               |ГДЕ
	               |	ШтрихкодыНоменклатуры.Штрихкод = &Штрихкод";
	Запрос.УстановитьПараметр("Штрихкод", АртикулБезСимволов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат;
	КонецЕсли;	
	
	Попытка
		МенеджерЗаписи = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Номенклатура = Номенклатура;
		МенеджерЗаписи.Штрихкод = АртикулБезСимволов;
		МенеджерЗаписи.Записать(Истина);
	Исключение
		
	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция НайтиЕдиницуИзмерения(ЕдИзмерения)
	Возврат Справочники.ЕдиницыИзмерения.НайтиПоНаименованию(ЕдИзмерения);
КонецФункции

&НаСервере
Функция НайтиНДС(Наименование)
	НДС = Справочники.СтавкиНДС.НайтиПоНаименованию(Наименование);	
	Возврат НДС;
КонецФункции

&НаКлиенте
Функция ПолучитьСписокЗначенийДляТаблицы1(Excel, ФайлСтрок, ФайлКолонок)
	Сч = 1;
	СписокКолонок = Новый Массив;
	Пока ЗначениеЗаполнено(Excel.Cells(4, Сч).Text) Цикл
		Строка = Excel.Cells(4, Сч).Text;
		СписокКолонок.Добавить(Строка);
		Сч = Сч + 1;
	КонецЦикла;
	
	СписокЗначений = Новый Массив;
	
	Если ФайлКолонок = 15 ИЛИ ФайлКолонок = 16 Тогда
		Для НС = 1 По ФайлСтрок Цикл
			СтрокаСоответствие = Новый Соответствие;
			Для НК =1 По ФайлКолонок Цикл				
				Если НС >= 11 Тогда
					ТекЗначение = СокрЛП(Excel.Cells(НС, НК).Text);
					Если НК = 3 Тогда
						СтрокаСоответствие["Артикул"] = ТекЗначение;
					ИначеЕсли НК = 4 Тогда
						СтрокаСоответствие["Наименование"] = ТекЗначение;
					ИначеЕсли НК = 11 Тогда
						СтрокаСоответствие["Единица измерения"] = ТекЗначение;
					ИначеЕсли НК = 10 Тогда
						СтрокаСоответствие["Количество"] = ТекЗначение;
					ИначеЕсли НК = 12 Тогда
						СтрокаСоответствие["Цена"] = СтрЗаменить(ТекЗначение, " ", "");
					КонецЕсли;
				КонецЕсли;
				Если ТекЗначение = "Итого:" Тогда
					Возврат СписокЗначений;
				КонецЕсли;
			КонецЦикла;
			
			СтрокаСоответствие["Ставка НДС"] = НайтиНДС("Без НДС");
			СписокЗначений.Добавить(СтрокаСоответствие);	
			
		КонецЦикла;
		
		Возврат СписокЗначений;
	КонецЕсли;
	
	Для НС = 5 По ФайлСтрок Цикл
		Состояние("Обрабатывается документ "+ Строка(Формат(?(ФайлСтрок=0,0,((100*НС)/ФайлСтрок)),"ЧЦ=3; ЧДЦ=0"))+" %");
		СтрокаСоответствие = Новый Соответствие;
		Для НК = 1 По СписокКолонок.Количество() Цикл
			ТекЗначение = Excel.Cells(НС, НК).Text;
			
			Если ТекЗначение = "Всего" Тогда
				Прервать;
			КонецЕсли;			
			
			СтрокаСоответствие[СписокКолонок[НК - 1]] = ТекЗначение;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(СтрокаСоответствие["Всего"]) Тогда
			СтрокаСоответствие["Цена"] = Число(СтрЗаменить(СтрокаСоответствие["Всего"], " ", "")) / Число(СтрокаСоответствие["Количество"]);	
			СтрокаСоответствие["Ставка НДС"] = "Без НДС";
		КонецЕсли;
		СписокЗначений.Добавить(СтрокаСоответствие);
	КонецЦикла;	
	
	Возврат СписокЗначений;
КонецФункции

&НаКлиенте
Функция ПолучитьСписокЗначенийДляТаблицы2(Excel, ФайлСтрок, ФайлКолонок)	
	
	СписокЗначений = Новый Массив;
	
	НачатьСчитывание = Ложь;
	Для НС = 1 По ФайлСтрок Цикл
		Состояние("Обрабатывается документ "+ Строка(Формат(?(ФайлСтрок=0,0,((100*НС)/ФайлСтрок)),"ЧЦ=3; ЧДЦ=0"))+" %");
		
		МассивКолонок = Новый Массив;
		СтрокаСимволов = "";
		СтрокаСоответствие = Новый Соответствие;
		Для НК = 1 По ФайлКолонок  Цикл
			ТекЗначение = СокрЛП(Excel.Cells(НС, НК).Text);
			Если ЗначениеЗаполнено(ТекЗначение) Тогда
				МассивКолонок.Добавить(ТекЗначение);
				СтрокаСимволов = СтрокаСимволов + ТекЗначение;
			КонецЕсли;					
						
		КонецЦикла;
		
		Если НачатьСчитывание И МассивКолонок.Количество() = 15 тогда
			МассивКолонок.Вставить(1, "");
		КонецЕсли;
		
		Если НачатьСчитывание И МассивКолонок.Количество() <> 16 Тогда
			НачатьСчитывание = Ложь;
		КонецЕсли;
		
		Если НачатьСчитывание Тогда
			Артикул = МассивКолонок[1];
			Наименование = СокрЛП(МассивКолонок[2]);
						
			СтрокаСоответствие = Новый Соответствие;
			СтрокаСоответствие["Наименование"] = Наименование;
			СтрокаСоответствие["Артикул"] = Артикул;
			СтрокаСоответствие["Единица измерения"] = МассивКолонок[5];
			СтрокаСоответствие["Количество"] = МассивКолонок[6];
			//СтрокаСоответствие["Цена"] = СтрЗаменить(МассивКолонок[7], " ", "");
			СтрокаСоответствие["Цена"] = Число(СтрЗаменить(МассивКолонок[12], " ", "")) / Число(МассивКолонок[6]);
			//СтрокаСоответствие["Ставка НДС"] = СтрЗаменить(МассивКолонок[10], " ", "");
			СтрокаСоответствие["Ставка НДС"] = НайтиНДС("Без НДС");
			
			СписокЗначений.Добавить(СтрокаСоответствие);
		КонецЕсли;
		
		Если СтрокаСимволов = "АБ11а22а34567891010а11" Тогда
			НачатьСчитывание = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СписокЗначений;	
КонецФункции

&НаКлиенте
Функция ПолучитьСписокЗначенийДляТаблицы3(Excel, ФайлСтрок, ФайлКолонок)		
	СписокЗначений = Новый Массив;
	
	НачатьСчитывание = Ложь;
	Для НС = 1 По ФайлСтрок Цикл
		Состояние("Обрабатывается документ "+ Строка(Формат(?(ФайлСтрок=0,0,((100*НС)/ФайлСтрок)),"ЧЦ=3; ЧДЦ=0"))+" %");
		
		МассивКолонок = Новый Массив;
		СтрокаСимволов = "";
		СтрокаСоответствие = Новый Соответствие;
		Для НК = 1 По ФайлКолонок Цикл
			ТекЗначение = СокрЛП(Excel.Cells(НС, НК).Text);
			Если ТекЗначение = "Универсальный передаточный" + Символы.ПС + "документ" ИЛИ ТекЗначение = "Универсальный передаточный документ" Тогда
				Возврат ПолучитьСписокЗначенийДляТаблицы2(Excel, ФайлСтрок, ФайлКолонок);
			КонецЕсли;
			//Сообщить("НС = " + НС + ";НК = " + НК + "; Значение = " + ТекЗначение);
			Если ЗначениеЗаполнено(ТекЗначение) Тогда
				Если ТекЗначение = "Итого:" Тогда
					НачатьСчитывание = Ложь;					
				КонецЕсли;
				МассивКолонок.Добавить(ТекЗначение);
				СтрокаСимволов = СтрокаСимволов + ТекЗначение;
			КонецЕсли;					
						
		КонецЦикла;
		
		Если НачатьСчитывание И МассивКолонок.Количество() <> 7 И МассивКолонок.Количество() <> 6 И МассивКолонок.Количество() <> 0 Тогда
			НачатьСчитывание = Ложь;
		КонецЕсли;
		            
		Если НачатьСчитывание Тогда
			Если МассивКолонок.Количество() = 0 Тогда
				Продолжить;	
			КонецЕсли;
			Артикул = МассивКолонок[1];
			Наименование = СокрЛП(МассивКолонок[2]);
									
			СтрокаСоответствие = Новый Соответствие;
			
			СтрокаСоответствие["Наименование"] = Наименование;
			СтрокаСоответствие["Артикул"] = Артикул;
			СтрокаСоответствие["Единица измерения"] = МассивКолонок[4];
			СтрокаСоответствие["Количество"] = МассивКолонок[3];
			СтрокаСоответствие["Цена"] = СтрЗаменить(МассивКолонок[5], " ", "");
			СтрокаСоответствие["Ставка НДС"] = "Без НДС";			
			
			СписокЗначений.Добавить(СтрокаСоответствие);
		КонецЕсли;
		
		Если СтрокаСимволов = "№АртикулТовары (работы, услуги)Кол-воЕд.ЦенаСумма" ИЛИ СтрокаСимволов = "№КодТовары (работы, услуги)КоличествоЦенаСумма" Тогда
			НачатьСчитывание = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СписокЗначений;	
КонецФункции

&НаКлиенте
Функция ПолучитьСписокЗначенийДляТаблицы4(Excel, ФайлСтрок, ФайлКолонок)		
	СписокЗначений = Новый Массив;
	
	Если ФайлКолонок = 17 ИЛИ ФайлКолонок = 18 Тогда
		СписокЗначений = Новый Массив;

		Для НС = 2 По ФайлСтрок Цикл
			Состояние("Обрабатывается документ "+ Строка(Формат(?(ФайлСтрок=0,0,((100*НС)/ФайлСтрок)),"ЧЦ=3; ЧДЦ=0"))+" %");
			СтрокаСоответствие = Новый Соответствие;
			Для НК = 1 По ФайлКолонок Цикл
				ТекЗначение = Excel.Cells(НС, НК).Text;
				
				Если НК = 1 Тогда
					СтрокаСоответствие["Наименование"] = ТекЗначение;
				ИначеЕсли НК = 15 Тогда
					СтрокаСоответствие["Артикул"] = ТекЗначение;
				ИначеЕсли НК = 3 Тогда
					СтрокаСоответствие["Единица измерения"] = ТекЗначение;
				ИначеЕсли НК = 4 Тогда
					СтрокаСоответствие["Количество"] = ТекЗначение;
				ИначеЕсли НК = 10 Тогда
					СтрокаСоответствие["Всего"] = ТекЗначение;
				КонецЕсли;
				
				
			КонецЦикла;
			
			Если ЗначениеЗаполнено(СтрокаСоответствие["Всего"]) Тогда		
				СтрокаСоответствие["Цена"] = Число(СтрЗаменить(СтрокаСоответствие["Всего"], " ", "")) / Число(СтрокаСоответствие["Количество"]);	
				СтрокаСоответствие["Ставка НДС"] = "Без НДС";
				СписокЗначений.Добавить(СтрокаСоответствие);
			КонецЕсли;
		КонецЦикла;	

		Возврат СписокЗначений;	
	КонецЕсли;
	
	НачатьСчитывание = Ложь;
	Для НС = 1 По ФайлСтрок Цикл
		Состояние("Обрабатывается документ "+ Строка(Формат(?(ФайлСтрок=0,0,((100*НС)/ФайлСтрок)),"ЧЦ=3; ЧДЦ=0"))+" %");
		
		МассивКолонок = Новый Массив;
		СтрокаСимволов = "";
		СтрокаСоответствие = Новый Соответствие;
		Для НК = 1 По ФайлКолонок Цикл
			ТекЗначение = СокрЛП(Excel.Cells(НС, НК).Text);
			Если ЗначениеЗаполнено(ТекЗначение) Тогда
				МассивКолонок.Добавить(ТекЗначение);
				СтрокаСимволов = СтрокаСимволов + ТекЗначение;
			КонецЕсли;							
		КонецЦикла;
		
		Если НачатьСчитывание И МассивКолонок.Количество() = 14 Тогда
			МассивКолонок.Вставить(13, "");
			//Сообщить("НачатьСчитывание И МассивКолонок.Количество() = 14");
		КонецЕсли;
		
		Если НачатьСчитывание И МассивКолонок.Количество() <> 15 Тогда
			НачатьСчитывание = Ложь;
			//Сообщить("НачатьСчитывание И МассивКолонок.Количество() <> 15");
		КонецЕсли;
		
		Если НачатьСчитывание Тогда
			Наименование = СокрЛП(МассивКолонок[0]);
			АртикулМассив = СтрРазделить(Наименование, " ", Ложь);
			Артикул = АртикулМассив[АртикулМассив.Количество() - 1];
			Артикул = Артикул;
			
									
			СтрокаСоответствие = Новый Соответствие;
			
			СтрокаСоответствие["Наименование"] = Наименование;
			СтрокаСоответствие["Артикул"] = Артикул;
			СтрокаСоответствие["Единица измерения"] = МассивКолонок[2];
			СтрокаСоответствие["Количество"] = МассивКолонок[3];
			//СтрокаСоответствие["Цена"] = СтрЗаменить(МассивКолонок[4], " ", "");
			СтрокаСоответствие["Цена"] = Число(СтрЗаменить(МассивКолонок[9], " ", "")) / Число(МассивКолонок[3]);
			СтрокаСоответствие["Ставка НДС"] = "Без НДС";			
			
			СписокЗначений.Добавить(СтрокаСоответствие);
		КонецЕсли;
		
		Если СтрокаСимволов = "122а34567891010а111213" Тогда
			НачатьСчитывание = Истина;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СписокЗначений;	
КонецФункции

&НаСервере
Функция ПолучитьОсновнойСклад() 
	Возврат Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Основной склад").Ссылка;
КонецФУнкции

// Получение поставщика для проверки
&НаСервере
Функция НайтиПоставщика(Наименование)
	Если Наименование = "Шите-МПлюс" Тогда
		Возврат РегистрыСведений.am_ХранилищеНастроек.ПолучитьШите_МПлюсПоУмолчанию();		
	ИначеЕсли Наименование = "Гринлайт" Тогда
		Возврат РегистрыСведений.am_ХранилищеНастроек.ПолучитьГринлайтПоУмолчанию();		
	ИначеЕсли Наименование = "М-Авто" Тогда
		Возврат РегистрыСведений.am_ХранилищеНастроек.ПолучитьМАвтоПоУмолчанию();
	ИначеЕсли Наименование = "Берк" Тогда
		Возврат РегистрыСведений.am_ХранилищеНастроек.ПолучитьБеркПоУмолчанию();
	КонецЕсли;	
КонецФункции

&НаСервере
Функция ПолучитьАртикулБезСимволов(Артикул)
	АртикулБезСимволов = СтрЗаменить(Артикул, " ", "");
	АртикулБезСимволов = СтрЗаменить(АртикулБезСимволов, ".", "");
	АртикулБезСимволов = СтрЗаменить(АртикулБезСимволов, "-", "");
	
	Возврат АртикулБезСимволов;
КонецФункции

&НаСервере
Процедура am_КонтрагентПриИзмененииПослеНаСервере()
	ИзменитьВидимостьЗагрузкиExcel();
КонецПроцедуры

&НаКлиенте
Процедура am_КонтрагентПриИзмененииПосле(Элемент)
	am_КонтрагентПриИзмененииПослеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИзменитьВидимостьЗагрузкиExcel()
	Элементы.ЗагрузитьEXCEL.Видимость = РегистрыСведений.am_ХранилищеНастроек.ПолучитьРазрешениеЗагружатьСчетаФактурыЭксель()
															И Объект.Контрагент = НайтиПоставщика("Шите-МПлюс");
															
	Если НЕ Элементы.ЗагрузитьEXCEL.Видимость Тогда
		Элементы.ЗагрузитьEXCEL.Видимость = РегистрыСведений.am_ХранилищеНастроек.ПолучитьРазрешениеЗагружатьРеализациюТоваровИУслугЭксель()
															И Объект.Контрагент = НайтиПоставщика("Гринлайт");															
	КонецЕсли;
														
	Если НЕ Элементы.ЗагрузитьEXCEL.Видимость Тогда
		Элементы.ЗагрузитьEXCEL.Видимость = РегистрыСведений.am_ХранилищеНастроек.ПолучитьРазрешениеЗагружатьУниверсальныйПредаточныйДокумент()
															И Объект.Контрагент = НайтиПоставщика("М-Авто");															
	КонецЕсли;
														
	Если НЕ Элементы.ЗагрузитьEXCEL.Видимость Тогда
		Элементы.ЗагрузитьEXCEL.Видимость = РегистрыСведений.am_ХранилищеНастроек.ПолучитьРазрешениеЗагружатьExcelБерк()
															И Объект.Контрагент = НайтиПоставщика("Берк");															
	КонецЕсли;
КонецПроцедуры
#КонецОбласти