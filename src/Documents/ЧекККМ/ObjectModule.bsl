
&Вместо("ПроверитьТоварныйСоставПредоплаты")
Процедура АМ_ПроверитьТоварныйСоставПредоплаты(Отказ)
	
	//+АняновМА, ситуация:
	//1. Оформлен возврат на 1000 рублей
	//2. Создан чек без отгрузки
	//3. Изменен заказ на 1500
	//4. Оформляют итоговый чек с доплатой в 500 рублей
	//В этой ситуации проверка ниже не работает. Отключил проверку.
	Возврат;
	//-АняновМА
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Запасы.Номенклатура КАК Номенклатура,
	|	Запасы.Характеристика КАК Характеристика,
	|	Запасы.Количество КАК Количество,
	|	Запасы.Всего КАК Всего
	|ПОМЕСТИТЬ ВТ_Запасы
	|ИЗ
	|	&Запасы КАК Запасы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Запасы.Номенклатура КАК Номенклатура,
	|	ВТ_Запасы.Характеристика КАК Характеристика,
	|	-ВТ_Запасы.Количество КАК Количество,
	|	-ВТ_Запасы.Всего КАК Всего
	|ИЗ
	|	ВТ_Запасы КАК ВТ_Запасы");
	Запрос.УстановитьПараметр("Запасы", Запасы);
	ТаблицаЗапасы = Запрос.Выполнить().Выгрузить();
	
	МассивОтличающихсяЧеков = Новый Массив;
	Для Каждого СтрокаПредоплаты Из Предоплата Цикл
		
		Если ТипЗнч(СтрокаПредоплаты.Документ) <> Тип("ДокументСсылка.ЧекККМ") Тогда
			Продолжить;
		КонецЕсли;
			
		Если СтрокаПредоплаты.Документ.Запасы.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
			
		ТаблицаЧекаПредоплаты = СтрокаПредоплаты.Документ.Запасы.Выгрузить(, "Номенклатура, Характеристика, Количество, Всего");
		
		ТаблицаСравнения = ТаблицаЗапасы.Скопировать();
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаЧекаПредоплаты, ТаблицаСравнения);
		
		ТаблицаСравнения.Свернуть("Номенклатура, Характеристика", "Количество, Всего");
		
		// По заказу чек отгрузки может отличаться от чека предоплаты
		// потому что состав отгружаемых товаров контролируется заказом
		Если ЗначениеЗаполнено(Заказ) Тогда
			
			Если ТаблицаСравнения.Итог("Количество") < 0
				ИЛИ ТаблицаСравнения.Итог("Всего") < 0 Тогда
				МассивОтличающихсяЧеков.Добавить(СтрокаПредоплаты.Документ);
			КонецЕсли;
			
		Иначе
			
			Если ТаблицаСравнения.Итог("Количество") <> 0
				ИЛИ ТаблицаСравнения.Итог("Всего") <> 0 Тогда
				МассивОтличающихсяЧеков.Добавить(СтрокаПредоплаты.Документ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстСообщения = "";
	Для Каждого ЭлементМассива Из МассивОтличающихсяЧеков Цикл
		
		ТекстСообщения = НСтр("ru = 'Товарный состав документа предоплаты %1 отличается от текущего'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, ЭлементМассива);
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,,,
			Отказ
		);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстСообщения)
		И Не ЗначениеЗаполнено(Заказ) Тогда
		
		ТекстСообщения = НСтр("ru = 'Для возможности частичной отгрузки по предоплате, оформляйте чеки на основании заказа покупателя'");
		
		УправлениеНебольшойФирмойСервер.СообщитьОбОшибке(
			ЭтотОбъект,
			ТекстСообщения,
			,,,
			Отказ
		);
		
	КонецЕсли;
	
КонецПроцедуры

&После("ОбработкаПроведения")
Процедура am_ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Статус = Перечисления.СтатусыЧековККМ.Пробит Тогда 
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ссылка.СкидкиНаценки) Тогда
		Возврат;
	КонецЕсли;
	
	Если Ссылка.СкидкиНаценки[0].ЗначениеСкидкиНаценки >=5 И Ссылка.СкидкиНаценки[0].ЗначениеСкидкиНаценки <=30 Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	МаркетинговыеАкции.Действует КАК Действует
		               |ИЗ
		               |	РегистрСведений.am_МаркетинговыеАкции.СрезПоследних(
		               |			&Дата,
		               |			Карта = &Карта
		               |				И Действует = ИСТИНА) КАК МаркетинговыеАкции";
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Карта", ДисконтнаяКарта);
		
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			
			Запись = РегистрыСведений.am_МаркетинговыеАкции.СоздатьМенеджерЗаписи();
			
			Запись.Период = ТекущаяДата();
			Запись.Контрагент = Контрагент;
			Запись.Карта = ДисконтнаяКарта.Ссылка;
			Запись.Скидка = ДисконтнаяКарта.Владелец;
			Запись.Действует = Ложь;
			Запись.ЧекККМ = Ссылка;
			
			Запись.Записать();

			Спр = ДисконтнаяКарта.ПолучитьОбъект();
			Спр.Владелец = Справочники.ВидыДисконтныхКарт.НайтиПоНаименованию("Автомолл");
			Спр.Записать();
			
		КонецЕсли;
		
	КонецЕсли;
	
	

	
	
	
КонецПроцедуры


&После("ПередЗаписью")
Процедура am_ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
КонецПроцедуры


&После("ПриЗаписи")
Процедура am_ПриЗаписи(Отказ)
	ОтветственныйЗаказа = ЭтотОбъект.Заказ.Ответственный; 
	Если Константы.am_ПроверятьОтветственногоВЧекеККМ.Получить() И ЗначениеЗаполнено(ЭтотОбъект.Заказ) И ОтветственныйЗаказа <> ЭтотОбъект.Ответственный Тогда
		ЭтотОбъект.Ответственный = ОтветственныйЗаказа;		
	КонецЕсли;
КонецПроцедуры

