&НаКлиенте
Процедура am_ПриОткрытииПосле(Отказ)
	ТекстПредложения = am_ПолучитьКонстанту("am_ТекстПредложения");
	ПоказыватьПредложениеПриОплате = am_ПолучитьКонстанту("am_ПоказыватьПредложениеПриОплате") И ЗначениеЗаполнено(ТекстПредложения);	
	Элементы.am_ТекстПредложения.Видимость = ПоказыватьПредложениеПриОплате;
	
	
	
	Если ПоказыватьПредложениеПриОплате Тогда
		am_ТекстПредложения = ТекстПредложения;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
&Вместо("ДобавитьОплатуКартой")
Процедура am_ДобавитьОплатуКартой(ОднаКарта_МК, ПробитьЧек) Экспорт
	
	// При записи очищаются значения в дополнительных колонках, т.ч. запомним ТЧ, а потом восстановим.
	СкопироватьДанныеТаблицВПриемникИзИсточникаНаКлиенте(Объект.БезналичнаяОплата, ВременнаяТаблицаКарт);
	УдалитьСтрокиОплатыСНулевойСуммой();
	
	НомерКарты = "";
	ПоказыватьПредупреждение = Ложь;
	
	Если НЕ УправлениеНебольшойФирмойКлиент.ПроверитьВозможностьПечатиЧека(ЭтаФорма, ПоказыватьПредупреждение) Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Не удалось выполнить оплату через платежный терминал'"));
		Возврат;
	КонецЕсли;
	
	Если НЕ ИспользоватьПодключаемоеОборудование Тогда // Проверка на включенную ФО "Использовать ВО"
		Возврат;
	КонецЕсли;
	
	// Выбор устройства ЭТ
	ИдентификаторУстройстваЭТ = ?(
	ЗначениеЗаполнено(ЭквайринговыйТерминал),
	ЭквайринговыйТерминал,
	Неопределено
	);
	
	// Выбор устройства ФР
	ИдентификаторУстройстваФР = ?(
	ЗначениеЗаполнено(ФискальныйРегистратор),
	ФискальныйРегистратор,
	Неопределено
	);
	
	Если ИдентификаторУстройстваЭТ <> Неопределено 
		И (ИдентификаторУстройстваФР <> Неопределено ИЛИ КассаККМИспользоватьБезПодключенияОборудования) Тогда
		
		ОплатаКартами = ВременнаяТаблицаКарт.Итог("Сумма");
		Дельта = СуммаДокумента - ПолученоНаличными - ОплатаКартами - Объект.Предоплата.Итог("СуммаРасчетов");
		ПределСуммы = СуммаДокумента - ОплатаКартами;
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("Сумма", Дельта);
		ПараметрыФормы.Вставить("ПределСуммы", ПределСуммы);
		ПараметрыФормы.Вставить("СписокТиповКарт", Новый СписокЗначений());
		Индекс = 0;
		Для Каждого ВидКарты Из ВидыПлатежныхКарт Цикл
			ПараметрыФормы.СписокТиповКарт.Добавить(Индекс, ВидКарты.Значение);
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Результат = Неопределено;
		
		ДополнительныеПараметры = Новый Структура(
		"ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерКарты, ОднаКарта_МК, ПробитьЧек",
		ИдентификаторУстройстваФР, ИдентификаторУстройстваЭТ, НомерКарты, ОднаКарта_МК, ПробитьЧек
		);
		
		Если ОднаКарта_МК Тогда
			Результат = Новый Структура("ВидКарты, НомерКарты, Сумма, НомерЧека, СсылочныйНомер",
			ВидКартыОплатаКартой, "", Дельта, "", ""
			);
			ДобавитьОплатуКартойЗавершение(Результат, ДополнительныеПараметры);
		Иначе
			ОткрытьФорму(
			"Справочник.ПодключаемоеОборудование.Форма.ФормаАвторизацииЭТ",
			ПараметрыФормы,,,,,
			Новый ОписаниеОповещения("ДобавитьОплатуКартойЗавершение",
			ЭтотОбъект,
			ДополнительныеПараметры
			),
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца
			);
		КонецЕсли;
		
	КонецЕсли;
	
	//ПродолжитьВызов(ОднаКарта_МК, ПробитьЧек);
	
КонецПроцедуры

&НаСервере
Функция am_ПолучитьКонстанту(Наименование)
	Возврат Константы[Наименование].Получить();	
КонецФункции
